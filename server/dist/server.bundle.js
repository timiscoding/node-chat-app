!function(e){var r={};function s(t){if(r[t])return r[t].exports;var o=r[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=e,s.c=r,s.d=function(e,r,t){s.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:t})},s.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},s.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(r,"a",r),r},s.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},s.p="",s(s.s=18)}([function(e,r){e.exports=require("mongoose")},function(e,r){e.exports=require("express")},function(e,r){e.exports=require("passport")},function(e,r){e.exports=require("path")},function(e,r){e.exports=require("hbs")},function(e,r){e.exports=require("express-validator/check")},function(e,r){e.exports=require("body-parser")},function(e,r){e.exports=require("moment")},function(e,r){e.exports=require("bcrypt")},function(e,r){e.exports=require("connect-ensure-login")},function(e,r){e.exports=require("connect-flash")},function(e,r){e.exports=require("express-session")},function(e,r){e.exports=require("passport-local")},function(e,r){e.exports=require("mongoose-beautiful-unique-validation")},function(e,r){e.exports=require("validator/lib/isEmail")},function(e,r){e.exports=require("socket.io")},function(e,r){e.exports=require("http")},function(e,r,s){"use strict";s.r(r);var t=s(1),o=s.n(t),n=s(16),a=s.n(n),i=s(15),u=s.n(i),c=s(4),l=s.n(c),d=s(3),m=s.n(d),p=s(0),g=s.n(p);var h=()=>g.a.connect("mongodb://127.0.0.1:27017/node-chat-app"),f=s(8),w=s.n(f),y=s(14),v=s.n(y),b=s(13),x=s.n(b);const U=new g.a.Schema({email:{type:String,required:"You must supply a email",unique:"An account with email {VALUE} already exists",trim:!0,lowercase:!0,validate:[v.a,"Email is not valid"]},password:{type:String,required:"You must supply a password",trim:!0,minlength:5},username:{type:String,required:"Username is required",unique:"Username already taken",trim:!0}});U.methods={hashPassword(e){if(!e)throw new Error("Password cannot be blank");return w.a.hash(e,12)},isValidPassword(e){return w.a.compare(e,this.password)}},U.pre("save",async function(e){this.password=await this.hashPassword(this.password),e()}),U.plugin(x.a);g.a.model("User",U);var q=s(2),O=s.n(q),L=s(12),j=s.n(L);const R=g.a.model("User");O.a.use(new j.a({usernameField:"email"},async(e,r,s)=>{try{const t=await R.findOne({email:e});return t&&await t.isValidPassword(r)?s(null,t,{message:`You have logged in, ${t.username}`}):s(null,!1,{message:"User or password is invalid"})}catch(e){return s(e,null,{message:"Could not authenticate. Please try again"})}})),O.a.serializeUser((e,r)=>r(null,e.id)),O.a.deserializeUser(async(e,r)=>{try{return r(null,await R.findById(e))}catch(e){return r(e)}});var M=e=>"string"==typeof e&&e.trim().length>0,_=s(7),P=s.n(_);const E=(e,r)=>({from:e,text:r,createdAt:P()().valueOf()});const I=(()=>{let e;const r=()=>new class{constructor(){this.users=[]}addUser(e,r,s){const t={id:e,name:r,room:s};return this.users.push(t),t}removeUser(e){const r=Object.assign({},this.getUser({id:e}));return r&&(this.users=this.users.filter(e=>e.id!==r.id)),r}getUser({id:e,name:r}){return this.users.find(s=>s.id===e||s.name===r)}getUserList(e){return this.users.filter(r=>r.room===e).map(e=>e.name)}getRoomList(){return[...new Set(this.users.map(e=>e.room))]}};return{getInstance:()=>(e||(e=r()),e)}})().getInstance(),$=e=>{e.emit("updateRoomList",{rooms:I.getRoomList()})},F=(e,r)=>e.on("createLocationMessage",s=>{const t=I.getUser({id:e.id});t&&r.to(t.room).emit("newLocationMessage",((e,r,s)=>({from:e,url:`https://www.google.com/maps?q=${r},${s}`,createdAt:P()().valueOf()}))(t.name,s.latitude,s.longitude))});var S=(e,r)=>({joinRoom:((e,r)=>e.on("join",(s,t)=>{if(!M(s.name)||!M(s.room))return t("Name and Room name are required!");const o=s.name.trim(),n=s.room.trim().toLowerCase(),a=I.getUser({name:o});return a&&a.room===n?t("Username taken!"):(e.join(n),I.removeUser(e.id),I.addUser(e.id,o,n),r.to(n).emit("updateUserList",I.getUserList(n)),e.emit("newMessage",E("Admin",`Welcome to the room ${n}!`)),e.broadcast.to(n).emit("newMessage",E("Admin",`${o} joined the chat`)),$(r),t())}))(e,r),createMessage:((e,r)=>e.on("createMessage",(s,t)=>{const o=I.getUser({id:e.id});o&&M(s.text)&&r.to(o.room).emit("newMessage",E(o.name,s.text)),t()}))(e,r),createLocationMessage:F(e,r),disconnect:((e,r)=>e.on("disconnect",()=>{const s=I.removeUser(e.id);r.to(s.room).emit("updateUserList",I.getUserList(s.room)),r.to(s.room).emit("newMessage",E("Admin",`${s.name} has left`)),$(r)}))(e,r),getRoomList:(e=>e.on("getRoomList",(e,r)=>{r({rooms:I.getRoomList()})}))(e)}),k=s(6),A=s.n(k),N=s(11),z=s.n(N),B=s(10),C=s.n(B),T=[o.a.static(m.a.join(__dirname,"../../public")),A.a.json(),A.a.urlencoded({extended:!0}),z()({secret:"keyboard cat"}),O.a.initialize(),O.a.session(),C()()],V=s(9),Y=s(5);const J=e=>(r,s,t)=>e(r,s,t).catch(t),D=g.a.model("User"),H=[Object(Y.checkSchema)({username:{in:"body",isLength:{errorMessage:"must not be empty",options:{min:1}},isAlphanumeric:{errorMessage:"must be letters or numbers only"},trim:!0},email:{in:"body",isEmail:{errorMessage:"must be a valid email"},trim:!0,normalizeEmail:{options:{all_lowercase:!0,gmail_convert_googlemaildotcom:!0,gmail_remove_dots:!0,gmail_remove_subaddress:!0}}},password:{in:"body",isLength:{errorMessage:"must be at least 5 characters long",options:{min:5}},trim:!0},"password-confirm":{in:"body",custom:{options:(e,{req:r})=>{if(r.body.password!==e)throw new Error("Password confirmation does not match password entered");return!0}}}}),(e,r,s)=>{const t=Object(Y.validationResult)(e);if(t.isEmpty())s();else{e.flash("error",t.mapped());const{username:s,email:o}=e.body;r.render("signup",{body:{username:s,email:o},flashes:e.flash()})}}];var W={createOne:async(e,r,s)=>{const{email:t,password:o,username:n}=e.body,a=new D({email:t,password:o,username:n});try{await a.save(),e.login(a,s),e.flash("success","New account created!"),r.redirect("/")}catch(o){o.errors?(e.flash("error",o.errors),r.render("signup",{body:{username:n,email:t},flashes:e.flash()})):s(o)}},getOne:J(async(e,r)=>{const s=await D.findById(e.user.id);r.send(`get user\n ${s}`)}),updateOne:J((e,r)=>{r.send(`update user\n ${e.docFromId}`)}),deleteOne:J((e,r)=>{r.send(`delete user\n ${e.docFromId}`)}),signupForm:(e,r)=>{r.render("signup")},validateNewUser:H};const G=o.a.Router(),K=g.a.model("User");G.param("id",async(e,r,s,t)=>{try{if(!g.a.Types.ObjectId.isValid(t))throw new Error("Invalid user id");const r=await K.findById(t);if(!r)throw new Error("No user found");e.docFromId=r,s()}catch(e){s(e.message)}}),G.route("/signup").get(W.signupForm).post(W.validateNewUser,W.createOne),G.route("/user/:id").get(Object(V.ensureLoggedIn)(),W.getOne).put(W.updateOne).delete(W.deleteOne);var Q={loginForm:(e,r)=>{r.render("login")},loginUser:O.a.authenticate("local",{successReturnToOrRedirect:"/",failureRedirect:"/login",failureFlash:!0,successFlash:!0}),logoutUser:(e,r)=>{e.logout(),e.flash("info","You have logged out"),r.redirect("/")}};const X=o.a.Router();X.get("/login",Q.loginForm),X.post("/login",Q.loginUser),X.get("/logout",Q.logoutUser);const Z=o.a.Router();Z.use("/",X),Z.use("/",G),Z.get("/",(e,r)=>{r.render("index",{title:"Join"})}),Z.post("/chat",(e,r)=>{r.render("chat",{title:"Chat"})}),Z.use((e,r,s,t)=>{if(!e.errors)return t(e);const o=Object.keys(e.errors);return o.length>0&&o.forEach(s=>r.flash("error",e.errors[s].message)),s.redirect("back")}),Z.use((e,r,s,t)=>{s.status(500).send(`something messed up: ${e.message}`)});var ee=Z;const re=o()(),se=a.a.createServer(re),te=u()(se);h().catch(e=>console.error("Could not connect to DB",e.message)),l.a.localsAsTemplateData(re),l.a.registerPartials(m.a.join(__dirname,"../../views/partials")),l.a.registerHelper("toJSON",e=>JSON.stringify(e,null,2)),re.set("view engine","hbs"),re.use(T),te.on("connection",e=>{console.log("New user connected"),S(e,te)}),re.use((e,r,s)=>{r.locals.user=e.user,r.locals.flashes=e.flash(),s()}),re.use("/",ee);const oe=process.env.PORT||3e3;se.listen(oe,()=>{console.log(`Server started on port ${oe}`)})},function(e,r,s){e.exports=s(17)}]);
//# sourceMappingURL=server.bundle.js.map