!function(e){var r={};function s(t){if(r[t])return r[t].exports;var o=r[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=e,s.c=r,s.d=function(e,r,t){s.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,r){if(1&r&&(e=s(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(s.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var o in e)s.d(t,o,function(r){return e[r]}.bind(null,o));return t},s.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(r,"a",r),r},s.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},s.p="",s(s.s=28)}([function(e,r){e.exports=require("mongoose")},function(e,r){e.exports=require("passport")},function(e,r){e.exports=require("express")},function(e,r){e.exports=require("lodash")},function(e,r){e.exports=require("path")},function(e,r,s){"use strict";(function(e){var t=s(17),o=s.n(t),a=s(4),n=s.n(a);const i=new o.a({message:{from:"no-reply@timiscoding.me"},transport:{port:process.env.MAILER_PORT,host:process.env.MAILER_HOST,auth:{user:process.env.MAILER_USERNAME,pass:process.env.MAILER_PASSWORD}},juice:!0,juiceResources:{webResources:{relativeTo:n.a.join(e,"../views/emails/build")}},views:{root:n.a.join(e,"../views/emails")}});r.a=i}).call(this,"/Users/tim/Work/misc/complete-node/node-chat-app/server")},function(e,r){e.exports=require("crypto")},function(e,r){e.exports=require("express-validator/check")},function(e,r){e.exports=require("express-session")},function(e,r){e.exports=require("body-parser")},function(e,r){e.exports=require("moment")},function(e,r){e.exports=require("bcrypt")},function(e,r){e.exports=require("request-promise")},function(e,r){e.exports=require("connect-ensure-login")},function(e,r){e.exports=require("connect-mongo")},function(e,r){e.exports=require("connect-flash")},function(e,r,s){"use strict";(function(e){var t=s(2),o=s.n(t),a=s(4),n=s.n(a),i=s(9),l=s.n(i),c=s(1),u=s.n(c),d=s(8),m=s.n(d),p=s(15),f=s.n(p),g=s(0),h=s.n(g),w=s(14);const y=s.n(w)()(m.a),v={secret:process.env.SESSION_SECRET,resave:!1,saveUninitialized:!1};"production"===process.NODE_ENV&&(v.store=new y({mongooseConnection:h.a.connection,autoRemove:"native"})),r.a=[o.a.static(n.a.join(e,"../public")),l.a.json(),l.a.urlencoded({extended:!0}),m()(v),u.a.initialize(),u.a.session(),f()()]}).call(this,"/Users/tim/Work/misc/complete-node/node-chat-app/server")},function(e,r){e.exports=require("email-templates")},function(e,r){e.exports=require("passport-google-oauth")},function(e,r){e.exports=require("passport-twitter")},function(e,r){e.exports=require("passport-facebook")},function(e,r){e.exports=require("passport-local")},function(e,r){e.exports=require("mongoose-beautiful-unique-validation")},function(e,r){e.exports=require("validator/lib/isEmail")},function(e,r){e.exports=require("es6-promisify")},function(e,r){e.exports=require("socket.io")},function(e,r){e.exports=require("http")},function(e,r,s){"use strict";s.r(r);var t=s(2),o=s.n(t),a=s(26),n=s.n(a),i=s(25),l=s.n(i),c=s(24),u=s(0),d=s.n(u),m=s(11),p=s.n(m),f=s(23),g=s.n(f),h=s(22),w=s.n(h),y=s(3),v=s.n(y);const b=new d.a.Schema({username:{type:String,required:"Username is required",unique:"Username already taken",sparse:!0,lowercase:!0,trim:!0,match:[/^[\w-]+$/,"Username must contain alphanumeric, '-', '_' characters only"]},local:{email:{type:String,unique:"An account with email {VALUE} already exists",sparse:!0,trim:!0,lowercase:!0,validate:[g.a,"Email is not valid"]},password:{type:String,trim:!0,minlength:5},isVerified:{type:Boolean,default:!1}},facebook:{id:String,token:String,displayName:String,email:String},twitter:{id:String,token:String,displayName:String,username:String},google:{id:String,token:String,displayName:String,email:String},passwordResetToken:String,passwordResetExpires:Date});b.methods.isValidPassword=function(e){return p.a.compare(e,this.local.password)};const k=["twitter","google","facebook","local"];b.methods.accountsTotal=function(){return Object.keys(this.toObject()).reduce((e,r)=>k.includes(r)&&("local"===r||"local"!==r&&this[r].token)?e+1:e,0)},b.statics.hashPassword=function(e){if(!e)throw new Error("Password cannot be blank");return p.a.hash(e,12)},b.statics.genUniqueUsername=async function(e="anon"){const r=e.toLowerCase().replace(/ /g,"_"),s=new RegExp(`^${r}d*$`),t=await this.find({username:s},"username");let o=r;for(let e=0;v.a.find(t,{username:o});e+=1)o=r+(t.length+e);return o},b.plugin(w.a);d.a.model("User",b);var E=s(6),R=s.n(E);const O=new d.a.Schema({user:{type:d.a.Schema.Types.ObjectId,ref:"User",required:!0},createdAt:{type:Date,expires:"5 min",default:Date.now},token:{type:String,required:!0}}),P=()=>R.a.randomBytes(20).toString("hex");O.statics.findOneOrCreate=async function(e){const r=this;if(e){return await r.findOne({user:e})||r.create({user:e,token:P()})}return new Error("User id not given")},O.statics.createToken=async function(e){return this.create({user:e,token:P()})};d.a.model("EmailVerifyToken",O);var T=async()=>d.a.connect(process.env.DB_URL),U=s(1),_=s.n(U),S=s(21),x=s.n(S),A=s(20),q=s.n(A),C=s(19),L=s.n(C),j=s(18);const $=d.a.model("User");_.a.use(new x.a({usernameField:"email",passReqToCallback:!0},async(e,r,s,t)=>{try{const e=await $.findOne({"local.email":r});return e&&await e.isValidPassword(s)?e.local.isVerified?t(null,e):t(null,!1,{message:'The email has not been verified for this account. <a href="/resend">Resend email confirmation</a>'}):t(null,!1,{message:"Email or password is invalid"})}catch(e){return t(e,null,{message:"Could not authenticate. Please try again"})}}));const I=e=>e.emails&&e.emails.length&&e.emails[0].value,M=async(e,r,s)=>$.create({[e]:{id:s.id,displayName:s.displayName,token:r,email:I(s)},username:await $.genUniqueUsername(s.username||s.displayName)}),N=e=>async(r,s,t,o,a)=>{try{let t=await $.findOne({[`${e}.id`]:o.id});return r.user?t?(t[e].token||(t=await M(e,s,o)),a(null,t)):a(null,t=await M(e,s,o)):t?(t[e].token||(t[e]={id:o.id,displayName:o.displayName,token:s,email:I(o)},t=await t.save()),a(null,t)):a(null,t=await M(e,s,o),{firstLogin:!0})}catch(e){return a(e,!1,{message:"Could not authenticate. Please try again"})}};_.a.use(new q.a({clientID:process.env.FACEBOOK_APP_ID,clientSecret:process.env.FACEBOOK_APP_SECRET,callbackURL:`${process.env.DOMAIN}/auth/facebook/callback`,profileFields:["email","displayName"],passReqToCallback:!0},N("facebook"))),_.a.use(new L.a({consumerKey:process.env.TWITTER_CONSUMER_KEY,consumerSecret:process.env.TWITTER_CONSUMER_SECRET,callbackURL:`${process.env.DOMAIN}/auth/twitter/callback`,passReqToCallback:!0},N("twitter"))),_.a.use(new j.OAuth2Strategy({clientID:process.env.GOOGLE_APP_ID,clientSecret:process.env.GOOGLE_APP_SECRET,callbackURL:`${process.env.DOMAIN}/auth/google/callback`,passReqToCallback:!0},N("google"))),_.a.serializeUser((e,r)=>r(null,e.id)),_.a.deserializeUser(async(e,r)=>{try{return r(null,await $.findById(e))}catch(e){return r(e)}});var F=s(5);var D=e=>"string"==typeof e&&e.trim().length>0,K=s(10),V=s.n(K);const H=(e,r)=>({from:e,text:r,createdAt:V()().valueOf()});const Y=(()=>{let e;const r=()=>new class{constructor(){this.users=[]}addUser(e,r){const s={id:e,name:`guest${this.users.length}`,room:r};return this.users.push(s),s}removeUser(e){const r=Object.assign({},this.getUser({id:e}));return r&&(this.users=this.users.filter(e=>e.id!==r.id)),r}getUser({id:e,name:r}){return this.users.find(s=>s.id===e||s.name===r)}getUserList(e){return this.users.filter(r=>r.room===e).map(e=>e.name)}getRoomList(){return[...new Set(this.users.map(e=>e.room))]}};return{getInstance:()=>(e||(e=r()),e)}})().getInstance(),B=e=>{e.emit("updateRoomList",{rooms:Y.getRoomList()})},G=(e,r)=>e.on("createLocationMessage",s=>{const t=Y.getUser({id:e.id});t&&r.to(t.room).emit("newLocationMessage",((e,r,s)=>({from:e,url:`https://www.google.com/maps?q=${r},${s}`,createdAt:V()().valueOf()}))(t.name,s.latitude,s.longitude))});var z=(e,r)=>({joinRoom:((e,r)=>e.on("join",(s,t)=>{if(!D(s.room))return t("Room name required!");const o=s.room.trim().toLowerCase();e.join(o),Y.removeUser(e.id);const{name:a}=Y.addUser(e.id,o);return r.to(o).emit("updateUserList",Y.getUserList(o)),e.emit("newMessage",H("Admin",`Welcome to the room ${o}!`)),e.broadcast.to(o).emit("newMessage",H("Admin",`${a} joined the chat`)),B(r),t()}))(e,r),createMessage:((e,r)=>e.on("createMessage",(s,t)=>{const o=Y.getUser({id:e.id});o&&D(s.text)&&r.to(o.room).emit("newMessage",H(o.name,s.text)),t()}))(e,r),createLocationMessage:G(e,r),disconnect:((e,r)=>e.on("disconnect",()=>{const s=Y.removeUser(e.id);r.to(s.room).emit("updateUserList",Y.getUserList(s.room)),r.to(s.room).emit("newMessage",H("Admin",`${s.name} has left`)),B(r)}))(e,r),getRoomList:(e=>e.on("getRoomList",(e,r)=>{r({rooms:Y.getRoomList()})}))(e)}),W=s(16),J=s(13),Q=s(12),X=s.n(Q),Z=s(7);const ee={username:{in:"body",isLength:{errorMessage:"Username must not be empty",options:{min:1}},custom:{options:e=>{if(!/^[\w-]+$/.test(e))throw new Error("Username must be letters, numbers, '_', ' -' only");if(/^guest\d+$/i.test(e))throw new Error("Usernames beginning with 'guest' followed by a number are reserved for unregistered users");return!0}},trim:!0},email:{in:"body",isEmail:{errorMessage:"Email address is not valid"},trim:!0,normalizeEmail:{options:{all_lowercase:!0,gmail_convert_googlemaildotcom:!0,gmail_remove_dots:!0,gmail_remove_subaddress:!0}}},password:{in:"body",isLength:{errorMessage:"Password must be at least 5 characters long",options:{min:5}},trim:!0},"password-confirm":{in:"body",custom:{options:(e,{req:r})=>{if(r.body.password!==e)throw new Error("Password confirmation does not match password field");return!0}}}},re=(...e)=>e.length?v.a.pick(ee,e):ee,se=(e,r)=>[Object(Z.checkSchema)(e),(e,s,t)=>{const o=Object(Z.validationResult)(e).formatWith(({msg:e})=>e);o.isEmpty()?t():(e.flash("error",o.array({onlyFirstError:!0})),s.render(r,{body:e.body,flashes:e.flash(),recaptchaKey:process.env.G_RECAPTCHA_SITE_KEY}))}],te=e=>(r,s,t)=>e(r,s,t).catch(t),oe=d.a.model("User"),ae=d.a.model("EmailVerifyToken"),ne=se(re(),"signup"),ie=se(re("email"),"confirmEmail"),le=se(re("password","password-confirm"),"resetPassword");var ce={createOne:te(async(e,r,s)=>{const{email:t,password:o,username:a}=e.body;try{const n=await oe.create({local:{email:t,password:await oe.hashPassword(o)},username:a});e.emailToken=await ae.createToken(n.id),s()}catch(o){if(o.errors){const s=Object.keys(o.errors).map(e=>o.errors[e].message);e.flash("error",s),r.render("signup",{body:{username:a,email:t},flashes:e.flash()})}else s(o)}}),getOne:te(async(e,r)=>{const s=await oe.findById(e.user.id);r.send(`get user\n ${s}`)}),updateOne:te((e,r)=>{r.send(`update user\n ${e.docFromId}`)}),deleteOne:te((e,r)=>{r.send(`delete user\n ${e.docFromId}`)}),signupForm:(e,r)=>{r.render("signup",{recaptchaKey:process.env.G_RECAPTCHA_SITE_KEY})},validateNewUser:ne,confirmEmail:te(async(e,r)=>{const s=await ae.findOneAndRemove({token:e.params.token}).populate("user");if(!s)return e.flash("error",'Email verification invalid. Either the link does not match the one provided\n      in the email or the link may have expired. <a href="/resend">Resend email confirmation</a>'),r.redirect("/");const{user:t}=s;return t.local.isVerified=!0,await t.save(),await e.login(t),e.flash("success","Your email has been confirmed. You are now logged in"),r.redirect("/")}),requestResend:(e,r)=>{r.render("confirmEmail",{recaptchaKey:process.env.G_RECAPTCHA_SITE_KEY})},validateEmail:ie,resend:async(e,r,s)=>{const t=await oe.findOne({"local.email":e.body.email});return t&&t.local?t.local&&t.local.isVerified?(e.flash("info","The email for this account is already confirmed"),r.redirect("/")):(e.emailToken=await ae.findOneOrCreate(t.id),e.body.username=t.username,s()):(e.flash("info","An account with this email does not exist"),r.render("confirmEmail",{body:e.body,flashes:e.flash()}))},sendConfirmEmail:(e,r)=>{const{email:s,username:t}=e.body;F.a.send({template:"verifyEmail",message:{to:s},locals:{name:t,confirmURL:`${e.protocol}://${e.hostname}/confirm/${e.emailToken.token}`}}),e.flash("info",`An email has been sent to ${s}. Please confirm your email to complete sign up.`),r.redirect("/")},forgotPasswordForm:(e,r)=>{r.render("forgotPassword",{recaptchaKey:process.env.G_RECAPTCHA_SITE_KEY})},forgotPassword:te(async(e,r,s)=>{const t=await oe.findOne({"local.email":e.body.email});return t&&t.local?(t.passwordResetToken=R.a.randomBytes(20).toString("hex"),t.passwordResetExpires=Date.now()+36e5,await t.save(),e.emailToken=t.passwordResetToken,e.body.username=t.username,s()):(e.flash("info","An account with this email does not exist"),r.render("forgotPassword",{body:e.body,flashes:e.flash()}))}),sendResetEmail:(e,r)=>{const{email:s,username:t}=e.body;F.a.send({template:"resetPassword",message:{to:s},locals:{name:t,resetURL:`${e.protocol}://${e.hostname}/reset/${e.emailToken}`}}),e.flash("info",`An email has been sent to ${s} with instructions to reset your password.`),r.redirect("/")},resetPasswordForm:async(e,r)=>{r.render("resetPassword")},validatePassword:le,resetPassword:te(async(e,r,s)=>{const{user:t}=e;t.local.password=await oe.hashPassword(e.body.password),t.passwordResetExpires=void 0,t.passwordResetToken=void 0,await t.save(),await e.login(t),s()}),validResetToken:te(async(e,r,s)=>{const t=await oe.findOne({passwordResetToken:e.params.token,passwordResetExpires:{$gt:Date.now()}});return t?(e.user=t,s()):(e.flash("error","This password reset is invalid or expired. Please request a new one"),r.redirect("/forgot"))}),sendPasswordUpdatedEmail:te(async(e,r)=>{const{local:{email:s},username:t}=e.user;F.a.send({template:"updatedPassword",message:{to:s},locals:{name:t}}),e.flash("success","Password has been updated"),r.redirect("/")}),validateHuman:e=>async(r,s,t)=>{const o={method:"POST",uri:"https://www.google.com/recaptcha/api/siteverify",formData:{secret:process.env.G_RECAPTCHA_SECRET,response:r.body["g-recaptcha-response"]},json:!0};try{if((await X()(o)).success)return t()}catch(e){return t(e)}return r.flash("error","reCaptcha failed. Please try again"),s.render(e,{body:r.body,flashes:r.flash(),recaptchaKey:process.env.G_RECAPTCHA_SITE_KEY})}};const ue=o.a.Router(),de=d.a.model("User");ue.param("id",async(e,r,s,t)=>{try{if(!d.a.Types.ObjectId.isValid(t))throw new Error("Invalid user id");const r=await de.findById(t);if(!r)throw new Error("No user found");e.docFromId=r,s()}catch(e){s(e.message)}}),ue.route("/signup").get(ce.signupForm).post(ce.validateNewUser,ce.validateHuman("signup"),ce.createOne,ce.sendConfirmEmail),ue.route("/user/:id").get(Object(J.ensureLoggedIn)(),ce.getOne).put(ce.updateOne).delete(ce.deleteOne),ue.route("/resend").get(ce.requestResend).post(ce.validateEmail,ce.validateHuman("confirmEmail"),ce.resend,ce.sendConfirmEmail),ue.get("/confirm/:token",ce.confirmEmail),ue.route("/forgot").get(ce.forgotPasswordForm).post(ce.validateEmail,ce.validateHuman("forgotPassword"),ce.forgotPassword,ce.sendResetEmail),ue.route("/reset/:token").get(ce.validResetToken,ce.resetPasswordForm).post(ce.validResetToken,ce.validatePassword,ce.resetPassword,ce.sendPasswordUpdatedEmail);const me=d.a.model("User");var pe={loginForm:(e,r)=>r.render("login"),loginUser:_.a.authenticate("local",{successReturnToOrRedirect:"/",failureRedirect:"/login",failureFlash:!0,successFlash:"You have logged in"}),logoutUser:(e,r)=>{e.logout(),e.flash("info","You have logged out"),r.redirect("/")},genOauthLogin:(e,r={})=>({auth:(s,t,o)=>(s.user?_.a.authorize:_.a.authenticate).call(_.a,e,r.scope&&{scope:r.scope})(s,t,o),authCb(r,s,t){const o=r.user?_.a.authorize:_.a.authenticate,a=r.user?{failureRedirect:"/profile",failureFlash:`${e} account was not linked`}:(o,a,n)=>o?t(o):a?r.login(a,o=>o?t(o):(r.flash("success",`You have logged in, ${a[e].displayName||a[e].username}`),n.firstLogin?s.redirect("/profile"):s.redirect("/"))):(r.flash("error",`Permission to login via ${e} was denied`),s.redirect("/login"));return o.call(_.a,e,a)(r,s,t)}}),profile:(e,r)=>{const{user:s}=e,t=Object.entries(s.toObject()).reduce((e,[r,s])=>(("local"===r&&s.email||s.token)&&(e[r]=s.email||s.displayName),e),{}),o=["local","twitter","google","facebook"].filter(e=>!t[e]);r.render("profile",{body:{username:e.user.username,email:e.user.local.email},linkedAccounts:t,linkable:o})},authLocal:_.a.authorize("local",{failureRedirect:"/link/local",failureFlash:"Email or password is invalid"}),linkAccount:async(e,r,s)=>{const{user:t,account:o}=e;if(t&&o){const s=o.toObject({transform(e,r){const s=Object.assign({},r);return delete s.__v,delete s._id,s}});return s.local&&await me.deleteOne({"local.email":s.local.email}),Object.assign(t,s,{username:t.username}),await t.save(),await o.remove(),e.flash("success","Accounts have been linked"),r.redirect("/profile")}return s()},unlinkAccount:async(e,r,s)=>{const t=e.params.account,{user:o}=e;if(!["twitter","google","facebook","local"].includes(t)){const e=new Error("Unknown account type");return e.status=400,s(e)}if(1===o.accountsTotal)return e.flash("error","Unable to unlink solo account"),r.redirect("/profile");if("local"===t){const e=Object.assign({},o.local);o.local=void 0,await o.save(),await me.create({local:e,username:await me.genUniqueUsername()})}else o[t].token=void 0,await o.save();return e.flash("success","Account has been unlinked"),r.redirect("/profile")},linkLocalForm:(e,r)=>r.render("link_local"),validateProfile:se(re("username","email"),"profile"),updateProfile:async(e,r)=>{const{username:s,email:t,password:o}=e.body;s!==e.user.username&&(e.user.username=s),e.user.local&&t!==e.user.local.email&&(e.user.local.email=t),o&&(e.user.local.password=await me.hashPassword(o)),await e.user.save(),e.flash("success","Account updated"),r.redirect("/profile")},preValidateProfile:(e,r,s)=>e.body.password?s("route"):s(),validateProfilePassword:se(re("username","email","password","password-confirm"),"profile")};const fe=(e,r,s)=>{e.isAuthenticated()?s():r.redirect("/")},ge=o.a.Router();ge.get("/login",pe.loginForm),ge.post("/login",pe.loginUser),ge.get("/logout",fe,pe.logoutUser),ge.get("/profile",fe,pe.profile),ge.post("/profile",fe,pe.preValidateProfile,pe.validateProfile,te(pe.updateProfile)),ge.post("/profile",pe.validateProfilePassword,te(pe.updateProfile)),ge.get("/link/local",fe,pe.linkLocalForm),ge.post("/link/local",fe,pe.authLocal,te(pe.linkAccount)),ge.post("/unlink/:account",fe,te(pe.unlinkAccount)),[{provider:"facebook",config:{scope:"email"}},{provider:"twitter"},{provider:"google",config:{scope:"https://www.googleapis.com/auth/userinfo.profile"}}].forEach(({provider:e,config:r})=>{const{auth:s,authCb:t}=pe.genOauthLogin(e,r);ge.get(`/auth/${e}`,s),ge.get(`/auth/${e}/callback`,t,te(pe.linkAccount)),ge.get(`/link/${e}`,fe,s)});const he=o.a.Router();he.use("/",ge),he.use("/",ue),he.get("/",(e,r)=>{r.render("index",{title:"Join"})}),he.post("/chat",(e,r)=>{r.render("chat",{title:"Chat"})}),he.use((e,r,s,t)=>{if(!e.errors)return t(e);const o=Object.keys(e.errors);return o.length>0&&o.forEach(s=>r.flash("error",e.errors[s].message)),s.redirect("back")}),he.use((e,r,s,t)=>{const o=e.status||500;s.status(o).render("error",{status:o,message:e.message})});var we=he;const ye=o()(),ve=n.a.createServer(ye),be=l()(ve);T().catch(e=>console.error("Could not connect to DB",e.message)),ye.set("view engine","pug"),ye.set("trust proxy",!0),ye.use(W.a),be.on("connection",e=>{console.log("New user connected"),z(e,be)}),ye.use((e,r,s)=>{e.login=Object(c.promisify)(e.login.bind(e)),s()}),ye.use((e,r,s)=>{const t=e.flash();r.locals.user=e.user,r.locals.flashes=Object.keys(t).length>0?t:void 0,s()}),ye.use("/",we);const ke=process.env.PORT||4e3;ve.listen(ke,()=>{console.log(`Server started on port ${ke}`)})},function(e,r,s){e.exports=s(27)}]);
//# sourceMappingURL=server.bundle.js.map