!function(e){var r={};function t(s){if(r[s])return r[s].exports;var n=r[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,t),n.l=!0,n.exports}t.m=e,t.c=r,t.d=function(e,r,s){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:s})},t.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=17)}([function(e,r){e.exports=require("mongoose")},function(e,r){e.exports=require("express")},function(e,r){e.exports=require("passport")},function(e,r){e.exports=require("path")},function(e,r){e.exports=require("hbs")},function(e,r){e.exports=require("body-parser")},function(e,r){e.exports=require("moment")},function(e,r){e.exports=require("bcrypt")},function(e,r){e.exports=require("connect-ensure-login")},function(e,r){e.exports=require("connect-flash")},function(e,r){e.exports=require("express-session")},function(e,r){e.exports=require("passport-local")},function(e,r){e.exports=require("mongoose-beautiful-unique-validation")},function(e,r){e.exports=require("validator/lib/isEmail")},function(e,r){e.exports=require("socket.io")},function(e,r){e.exports=require("http")},function(e,r,t){"use strict";t.r(r);var s=t(1),n=t.n(s),o=t(15),a=t.n(o),i=t(14),u=t.n(i),c=t(4),d=t.n(c),l=t(3),m=t.n(l),p=t(0),g=t.n(p);var f=()=>g.a.connect("mongodb://127.0.0.1:27017/node-chat-app"),h=t(7),w=t.n(h),y=t(13),x=t.n(y),v=t(12),U=t.n(v);const q=new g.a.Schema({email:{type:String,required:"You must supply a email",unique:"An account with email {VALUE} already exists",trim:!0,lowercase:!0,validate:[x.a,"Email is not valid"]},password:{type:String,required:"You must supply a password",trim:!0,minlength:5},username:{type:String,required:"Username is required",unique:"Username already taken",trim:!0}});q.methods={hashPassword(e){if(!e)throw new Error("Password cannot be blank");return w.a.hash(e,12)},isValidPassword(e){return w.a.compare(e,this.password)}},q.pre("save",async function(e){this.password=await this.hashPassword(this.password),e()}),q.plugin(U.a);g.a.model("User",q);var b=t(2),O=t.n(b),L=t(11),R=t.n(L);const j=g.a.model("User");O.a.use(new R.a({usernameField:"email"},async(e,r,t)=>{try{const s=await j.findOne({email:e});return t(null,s?!!await s.isValidPassword(r)&&s:!1)}catch(e){return t(e)}})),O.a.serializeUser((e,r)=>r(null,e.id)),O.a.deserializeUser(async(e,r)=>{try{return r(null,await j.findById(e))}catch(e){return r(e)}});var I=e=>"string"==typeof e&&e.trim().length>0,M=t(6),P=t.n(M);const $=(e,r)=>({from:e,text:r,createdAt:P()().valueOf()});const S=(()=>{let e;const r=()=>new class{constructor(){this.users=[]}addUser(e,r,t){const s={id:e,name:r,room:t};return this.users.push(s),s}removeUser(e){const r=Object.assign({},this.getUser({id:e}));return r&&(this.users=this.users.filter(e=>e.id!==r.id)),r}getUser({id:e,name:r}){return this.users.find(t=>t.id===e||t.name===r)}getUserList(e){return this.users.filter(r=>r.room===e).map(e=>e.name)}getRoomList(){return[...new Set(this.users.map(e=>e.room))]}};return{getInstance:()=>(e||(e=r()),e)}})().getInstance(),A=e=>{e.emit("updateRoomList",{rooms:S.getRoomList()})},F=(e,r)=>e.on("createLocationMessage",t=>{const s=S.getUser({id:e.id});s&&r.to(s.room).emit("newLocationMessage",((e,r,t)=>({from:e,url:`https://www.google.com/maps?q=${r},${t}`,createdAt:P()().valueOf()}))(s.name,t.latitude,t.longitude))});var _=(e,r)=>({joinRoom:((e,r)=>e.on("join",(t,s)=>{if(!I(t.name)||!I(t.room))return s("Name and Room name are required!");const n=t.name.trim(),o=t.room.trim().toLowerCase(),a=S.getUser({name:n});return a&&a.room===o?s("Username taken!"):(e.join(o),S.removeUser(e.id),S.addUser(e.id,n,o),r.to(o).emit("updateUserList",S.getUserList(o)),e.emit("newMessage",$("Admin",`Welcome to the room ${o}!`)),e.broadcast.to(o).emit("newMessage",$("Admin",`${n} joined the chat`)),A(r),s())}))(e,r),createMessage:((e,r)=>e.on("createMessage",(t,s)=>{const n=S.getUser({id:e.id});n&&I(t.text)&&r.to(n.room).emit("newMessage",$(n.name,t.text)),s()}))(e,r),createLocationMessage:F(e,r),disconnect:((e,r)=>e.on("disconnect",()=>{const t=S.removeUser(e.id);r.to(t.room).emit("updateUserList",S.getUserList(t.room)),r.to(t.room).emit("newMessage",$("Admin",`${t.name} has left`)),A(r)}))(e,r),getRoomList:(e=>e.on("getRoomList",(e,r)=>{r({rooms:S.getRoomList()})}))(e)}),k=t(5),E=t.n(k),N=t(10),B=t.n(N),T=t(9),V=t.n(T),z=[n.a.static(m.a.join(__dirname,"../../public")),E.a.json(),E.a.urlencoded({extended:!0}),B()({secret:"keyboard cat"}),O.a.initialize(),O.a.session(),V()()],C=t(8);const J=e=>(r,t,s)=>e(r,t,s).catch(s),D=g.a.model("User");var Y={createOne:J(async(e,r)=>{const{email:t,password:s,username:n}=e.body,o=new D({email:t,password:s,username:n});await o.save(),e.flash("success","New account created!"),r.redirect("/")}),getOne:J(async(e,r)=>{const t=await D.findById(e.user.id);r.send(`get user\n ${t}`)}),updateOne:J((e,r)=>{r.send(`update user\n ${e.docFromId}`)}),deleteOne:J((e,r)=>{r.send(`delete user\n ${e.docFromId}`)}),signupForm:(e,r)=>{r.render("signup")}};const H=n.a.Router(),W=g.a.model("User");H.param("id",async(e,r,t,s)=>{try{if(!g.a.Types.ObjectId.isValid(s))throw new Error("Invalid user id");const r=await W.findById(s);if(!r)throw new Error("No user found");e.docFromId=r,t()}catch(e){t(e.message)}}),H.route("/signup").get(Y.signupForm).post(Y.createOne),H.route("/user/:id").get(Object(C.ensureLoggedIn)(),Y.getOne).put(Y.updateOne).delete(Y.deleteOne);var G={loginForm:(e,r)=>{r.render("login")},loginUser:O.a.authenticate("local",{successReturnToOrRedirect:"/",failureRedirect:"/login"})};const K=n.a.Router();K.get("/login",G.loginForm),K.post("/login",G.loginUser);const Q=n.a.Router();Q.use("/",K),Q.use("/",H),Q.get("/",(e,r)=>{r.render("index",{title:"Join"})}),Q.post("/chat",(e,r)=>{r.render("chat",{title:"Chat"})}),Q.use((e,r,t,s)=>{if(!e.errors)return s(e);const n=Object.keys(e.errors);return n.length>0&&n.forEach(t=>r.flash("error",e.errors[t].message)),t.redirect("back")}),Q.use((e,r,t,s)=>{t.status(500).send(`something messed up: ${e.message}`)});var X=Q;const Z=n()(),ee=a.a.createServer(Z),re=u()(ee);f().catch(e=>console.error("Could not connect to DB",e.message)),d.a.localsAsTemplateData(Z),d.a.registerPartials(m.a.join(__dirname,"../../views/partials")),d.a.registerHelper("toJSON",e=>JSON.stringify(e,null,2)),Z.set("view engine","hbs"),Z.use(z),re.on("connection",e=>{console.log("New user connected!"),_(e,re)}),Z.use((e,r,t)=>{r.locals.user=e.user,r.locals.flashes=e.flash(),t()}),Z.use("/",X);const te=process.env.PORT||3e3;ee.listen(te,()=>{console.log(`Server started on port ${te}`)})},function(e,r,t){e.exports=t(16)}]);
//# sourceMappingURL=server.bundle.js.map