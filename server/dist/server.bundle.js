!function(e){var t={};function r(s){if(t[s])return t[s].exports;var a=t[s]={i:s,l:!1,exports:{}};return e[s].call(a.exports,a,a.exports,r),a.l=!0,a.exports}r.m=e,r.c=t,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(s,a,function(t){return e[t]}.bind(null,a));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=34)}([function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("passport")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("lodash")},function(e,t,r){"use strict";(function(e){var s=r(20),a=r.n(s),o=r(3),n=r.n(o);const i=new a.a({message:{from:"no-reply@timiscoding.me"},transport:{port:process.env.MAILER_PORT,host:process.env.MAILER_HOST,auth:{user:process.env.MAILER_USERNAME,pass:process.env.MAILER_PASSWORD}},juice:!0,juiceResources:{webResources:{relativeTo:n.a.join(e,"../views/emails/build")}},views:{root:n.a.join(e,"../views/emails")}});t.a=i}).call(this,"/Users/tim/Work/misc/complete-node/node-chat-app/server")},function(e,t){e.exports=require("crypto")},function(e,t,r){"use strict";(function(e){r.d(t,"a",function(){return k}),r.d(t,"b",function(){return O});var s=r(2),a=r.n(s),o=r(30),n=r.n(o),i=r(29),c=r.n(i),l=r(12),u=r.n(l),d=r(28),m=r.n(d),p=r(3),f=r.n(p),g=(r(32),r(27)),h=r(13),w=(r(31),r(5),r(14)),y=r(19),v=r(15);const b=a()(),k=n.a.createServer(b),O=c()(k);Object(h.a)().catch(e=>console.error("Could not connect to DB",e.message)),u.a.localsAsTemplateData(b);const E=m()(u.a);E.registerPartials.bind(E)(f.a.join(e,"../views/partials"),{}),b.set("view engine","pug"),b.set("trust proxy",!0),b.use(y.a),O.on("connection",e=>{console.log("New user connected"),Object(w.a)(e,O)}),b.use((e,t,r)=>{e.login=Object(g.promisify)(e.login.bind(e)),r()}),b.use((e,t,r)=>{const s=e.flash();t.locals.user=e.user,t.locals.flashes=Object.keys(s).length>0?s:void 0,r()}),b.use("/",v.a)}).call(this,"/Users/tim/Work/misc/complete-node/node-chat-app/server")},function(e,t){e.exports=require("express-validator/check")},function(e,t){e.exports=require("body-parser")},function(e,t){e.exports=require("moment")},function(e,t){e.exports=require("bcrypt")},function(e,t){e.exports=require("hbs")},function(e,t,r){"use strict";var s=r(0),a=r.n(s),o=r(11),n=r.n(o),i=r(26),c=r.n(i),l=r(25),u=r.n(l),d=r(4),m=r.n(d);const p=new a.a.Schema({username:{type:String,required:"Username is required",unique:"Username already taken",sparse:!0,lowercase:!0,trim:!0,match:[/^[\w-]+$/,"Username must contain alphanumeric, '-', '_' characters only"]},local:{email:{type:String,unique:"An account with email {VALUE} already exists",sparse:!0,trim:!0,lowercase:!0,validate:[c.a,"Email is not valid"]},password:{type:String,trim:!0,minlength:5},isVerified:{type:Boolean,default:!1}},facebook:{id:String,token:String,displayName:String,email:String},twitter:{id:String,token:String,displayName:String,username:String},google:{id:String,token:String,displayName:String,email:String},passwordResetToken:String,passwordResetExpires:Date});p.methods.isValidPassword=function(e){return n.a.compare(e,this.local.password)};const f=["twitter","google","facebook","local"];p.methods.accountsTotal=function(){return Object.keys(this.toObject()).reduce((e,t)=>f.includes(t)&&("local"===t||"local"!==t&&this[t].token)?e+1:e,0)},p.statics.hashPassword=function(e){if(!e)throw new Error("Password cannot be blank");return n.a.hash(e,12)},p.statics.genUniqueUsername=async function(e="anon"){const t=e.toLowerCase().replace(/ /g,"_"),r=new RegExp(`^${t}d*$`),s=await this.find({username:r},"username");let a=t;for(let e=0;m.a.find(s,{username:a});e+=1)a=t+(s.length+e);return a},p.plugin(u.a);a.a.model("User",p);var g=r(6),h=r.n(g);const w=new a.a.Schema({user:{type:a.a.Schema.Types.ObjectId,ref:"User",required:!0},createdAt:{type:Date,expires:"5 min",default:Date.now},token:{type:String,required:!0}}),y=()=>h.a.randomBytes(20).toString("hex");w.statics.findOneOrCreate=async function(e){const t=this;if(e){return await t.findOne({user:e})||t.create({user:e,token:y()})}return new Error("User id not given")},w.statics.createToken=async function(e){return this.create({user:e,token:y()})};a.a.model("EmailVerifyToken",w);t.a=(async()=>a.a.connect(process.env.DB_URL))},function(e,t,r){"use strict";var s=e=>"string"==typeof e&&e.trim().length>0,a=r(10),o=r.n(a);const n=(e,t)=>({from:e,text:t,createdAt:o()().valueOf()});const i=(()=>{let e;const t=()=>new class{constructor(){this.users=[]}addUser(e,t,r){const s={id:e,name:t,room:r};return this.users.push(s),s}removeUser(e){const t=Object.assign({},this.getUser({id:e}));return t&&(this.users=this.users.filter(e=>e.id!==t.id)),t}getUser({id:e,name:t}){return this.users.find(r=>r.id===e||r.name===t)}getUserList(e){return this.users.filter(t=>t.room===e).map(e=>e.name)}getRoomList(){return[...new Set(this.users.map(e=>e.room))]}};return{getInstance:()=>(e||(e=t()),e)}})().getInstance(),c=e=>{e.emit("updateRoomList",{rooms:i.getRoomList()})},l=(e,t)=>e.on("createLocationMessage",r=>{const s=i.getUser({id:e.id});s&&t.to(s.room).emit("newLocationMessage",((e,t,r)=>({from:e,url:`https://www.google.com/maps?q=${t},${r}`,createdAt:o()().valueOf()}))(s.name,r.latitude,r.longitude))});t.a=((e,t)=>({joinRoom:((e,t)=>e.on("join",(r,a)=>{if(!s(r.name)||!s(r.room))return a("Name and Room name are required!");const o=r.name.trim(),l=r.room.trim().toLowerCase(),u=i.getUser({name:o});return u&&u.room===l?a("Username taken!"):(e.join(l),i.removeUser(e.id),i.addUser(e.id,o,l),t.to(l).emit("updateUserList",i.getUserList(l)),e.emit("newMessage",n("Admin",`Welcome to the room ${l}!`)),e.broadcast.to(l).emit("newMessage",n("Admin",`${o} joined the chat`)),c(t),a())}))(e,t),createMessage:((e,t)=>e.on("createMessage",(r,a)=>{const o=i.getUser({id:e.id});o&&s(r.text)&&t.to(o.room).emit("newMessage",n(o.name,r.text)),a()}))(e,t),createLocationMessage:l(e,t),disconnect:((e,t)=>e.on("disconnect",()=>{const r=i.removeUser(e.id);t.to(r.room).emit("updateUserList",i.getUserList(r.room)),t.to(r.room).emit("newMessage",n("Admin",`${r.name} has left`)),c(t)}))(e,t),getRoomList:(e=>e.on("getRoomList",(e,t)=>{t({rooms:i.getRoomList()})}))(e)}))},function(e,t,r){"use strict";var s=r(2),a=r.n(s),o=r(16),n=r(0),i=r.n(n),c=r(6),l=r.n(c),u=r(4),d=r.n(u),m=r(8);const p={username:{in:"body",isLength:{errorMessage:"Username must not be empty",options:{min:1}},matches:{errorMessage:"Username must be letters, numbers, '_', '-' only",options:/^[\w-]+$/},trim:!0},email:{in:"body",isEmail:{errorMessage:"Email address is not valid"},trim:!0,normalizeEmail:{options:{all_lowercase:!0,gmail_convert_googlemaildotcom:!0,gmail_remove_dots:!0,gmail_remove_subaddress:!0}}},password:{in:"body",isLength:{errorMessage:"Password must be at least 5 characters long",options:{min:5}},trim:!0},"password-confirm":{in:"body",custom:{options:(e,{req:t})=>{if(t.body.password!==e)throw new Error("Password confirmation does not match password field");return!0}}}},f=(...e)=>e.length?d.a.pick(p,e):p,g=(e,t)=>[Object(m.checkSchema)(e),(e,r,s)=>{const a=Object(m.validationResult)(e).formatWith(({msg:e})=>e);a.isEmpty()?s():(e.flash("error",a.array({onlyFirstError:!0})),r.render(t,{body:e.body,flashes:e.flash()}))}],h=e=>(t,r,s)=>e(t,r,s).catch(s);var w=r(5);const y=i.a.model("User"),v=i.a.model("EmailVerifyToken"),b=g(f(),"signup"),k=g(f("email"),"confirmEmail"),O=g(f("password","password-confirm"),"resetPassword");var E={createOne:h(async(e,t,r)=>{const{email:s,password:a,username:o}=e.body;try{const n=await y.create({local:{email:s,password:await y.hashPassword(a)},username:o});e.emailToken=await v.createToken(n.id),r()}catch(a){if(a.errors){const r=Object.keys(a.errors).map(e=>a.errors[e].message);e.flash("error",r),t.render("signup",{body:{username:o,email:s},flashes:e.flash()})}else r(a)}}),getOne:h(async(e,t)=>{const r=await y.findById(e.user.id);t.send(`get user\n ${r}`)}),updateOne:h((e,t)=>{t.send(`update user\n ${e.docFromId}`)}),deleteOne:h((e,t)=>{t.send(`delete user\n ${e.docFromId}`)}),signupForm:(e,t)=>{t.render("signup")},validateNewUser:b,confirmEmail:h(async(e,t)=>{const r=await v.findOneAndRemove({token:e.params.token}).populate("user");if(!r)return e.flash("error",'Email verification invalid. Either the link does not match the one provided\n      in the email or the link may have expired. <a href="/resend">Resend email confirmation</a>'),t.redirect("/");const{user:s}=r;return s.local.isVerified=!0,await s.save(),await e.login(s),e.flash("success","Your email has been confirmed. You are now logged in"),t.redirect("/")}),requestResend:(e,t)=>{t.render("confirmEmail")},validateEmail:k,resend:async(e,t,r)=>{const s=await y.findOne({"local.email":e.body.email});return s&&s.local?s.local&&s.local.isVerified?(e.flash("info","The email for this account is already confirmed"),t.redirect("/")):(e.emailToken=await v.findOneOrCreate(s.id),e.body.username=s.username,r()):(e.flash("info","An account with this email does not exist"),t.render("confirmEmail",{body:e.body,flashes:e.flash()}))},sendConfirmEmail:(e,t)=>{const{email:r,username:s}=e.body;w.a.send({template:"verifyEmail",message:{to:r},locals:{name:s,confirmURL:`${e.protocol}://${e.hostname}/confirm/${e.emailToken.token}`}}),e.flash("info",`An email has been sent to ${r}. Please confirm your email to complete sign up.`),t.redirect("/")},forgotPasswordForm:(e,t)=>{t.render("forgotPassword")},forgotPassword:h(async(e,t,r)=>{const s=await y.findOne({"local.email":e.body.email});return s&&s.local?(s.passwordResetToken=l.a.randomBytes(20).toString("hex"),s.passwordResetExpires=Date.now()+36e5,await s.save(),e.emailToken=s.passwordResetToken,e.body.username=s.username,r()):(e.flash("info","An account with this email does not exist"),t.render("forgotPassword",{body:e.body,flashes:e.flash()}))}),sendResetEmail:(e,t)=>{const{email:r,username:s}=e.body;w.a.send({template:"resetPassword",message:{to:r},locals:{name:s,resetURL:`${e.protocol}://${e.hostname}/reset/${e.emailToken}`}}),e.flash("info",`An email has been sent to ${r} with instructions to reset your password.`),t.redirect("/")},resetPasswordForm:async(e,t)=>{t.render("resetPassword")},validatePassword:O,resetPassword:h(async(e,t,r)=>{const{user:s}=e;s.local.password=await y.hashPassword(e.body.password),s.passwordResetExpires=void 0,s.passwordResetToken=void 0,await s.save(),await e.login(s),r()}),validResetToken:h(async(e,t,r)=>{const s=await y.findOne({passwordResetToken:e.params.token,passwordResetExpires:{$gt:Date.now()}});if(!s)return e.flash("error","This password reset is invalid or expired. Please request a new one"),t.redirect("/forgot");e.user=s,r()}),sendPasswordUpdatedEmail:h(async(e,t)=>{const{local:{email:r},username:s}=e.user;w.a.send({template:"updatedPassword",message:{to:r},locals:{name:s}}),e.flash("success","Password has been updated"),t.redirect("/")})};const R=a.a.Router(),U=i.a.model("User");R.param("id",async(e,t,r,s)=>{try{if(!i.a.Types.ObjectId.isValid(s))throw new Error("Invalid user id");const t=await U.findById(s);if(!t)throw new Error("No user found");e.docFromId=t,r()}catch(e){r(e.message)}}),R.route("/signup").get(E.signupForm).post(E.validateNewUser,E.createOne,E.sendConfirmEmail),R.route("/user/:id").get(Object(o.ensureLoggedIn)(),E.getOne).put(E.updateOne).delete(E.deleteOne),R.route("/resend").get(E.requestResend).post(E.validateEmail,E.resend,E.sendConfirmEmail),R.get("/confirm/:token",E.confirmEmail),R.route("/forgot").get(E.forgotPasswordForm).post(E.validateEmail,E.forgotPassword,E.sendResetEmail),R.route("/reset/:token").get(E.validResetToken,E.resetPasswordForm).post(E.validResetToken,E.validatePassword,E.resetPassword,E.sendPasswordUpdatedEmail);var x=r(1),P=r.n(x);const S=i.a.model("User");var q={loginForm:(e,t)=>t.render("login"),loginUser:P.a.authenticate("local",{successReturnToOrRedirect:"/",failureRedirect:"/login",failureFlash:!0,successFlash:"You have logged in"}),logoutUser:(e,t)=>{e.logout(),e.flash("info","You have logged out"),t.redirect("/")},genOauthLogin:(e,t={})=>({auth:(r,s,a)=>(r.user?P.a.authorize:P.a.authenticate).call(P.a,e,t.scope&&{scope:t.scope})(r,s,a),authCb(t,r,s){const a=t.user?P.a.authorize:P.a.authenticate,o=t.user?{failureRedirect:"/profile",failureFlash:`${e} account was not linked`}:(a,o,n)=>a?s(a):o?t.login(o,a=>a?s(a):(t.flash("success",`You have logged in, ${o[e].displayName||o[e].username}`),n.firstLogin?r.redirect("/profile"):r.redirect("/"))):(t.flash("error",`Permission to login via ${e} was denied`),r.redirect("/login"));return a.call(P.a,e,o)(t,r,s)}}),profile:(e,t)=>{const{user:r}=e,s=Object.entries(r.toObject()).reduce((e,[t,r])=>(("local"===t&&r.email||r.token)&&(e[t]=r.email||r.displayName),e),{}),a=["local","twitter","google","facebook"].filter(e=>!s[e]);t.render("profile",{body:{username:e.user.username},linkedAccounts:s,linkable:a})},authLocal:P.a.authorize("local",{failureRedirect:"/link/local",failureFlash:"Email or password is invalid"}),linkAccount:async(e,t,r)=>{const{user:s,account:a}=e;if(s&&a){const r=a.toObject({transform(e,t){const r=Object.assign({},t);return delete r.__v,delete r._id,r}});return r.local&&await S.deleteOne({"local.email":r.local.email}),Object.assign(s,r,{username:s.username}),await s.save(),await a.remove(),e.flash("success","Accounts have been linked"),t.redirect("/profile")}return r()},unlinkAccount:async(e,t,r)=>{const s=e.params.account,{user:a}=e;if(!["twitter","google","facebook","local"].includes(s)){const e=new Error("Unknown account type");return e.status=400,r(e)}if(1===a.accountsTotal)return e.flash("error","Unable to unlink solo account"),t.redirect("/profile");if("local"===s){const e=Object.assign({},a.local);a.local=void 0,await a.save(),await S.create({local:e,username:await S.genUniqueUsername()})}else a[s].token=void 0,await a.save();e.flash("success","Account has been unlinked"),t.redirect("/profile")},linkLocalForm:(e,t)=>t.render("link_local"),validateProfile:g(f("username"),"profile"),updateProfile:async(e,t)=>{e.user.username=e.body.username,await e.user.save(),e.flash("success","Username updated"),t.redirect("/profile")}};const T=(e,t,r)=>{e.isAuthenticated()?r():t.redirect("/")},L=a.a.Router();L.get("/login",q.loginForm),L.post("/login",q.loginUser),L.get("/logout",T,q.logoutUser),L.get("/profile",T,q.profile),L.post("/profile",T,q.validateProfile,h(q.updateProfile)),L.get("/link/local",T,q.linkLocalForm),L.post("/link/local",T,q.authLocal,h(q.linkAccount)),L.post("/unlink/:account",T,h(q.unlinkAccount)),[{provider:"facebook",config:{scope:"email"}},{provider:"twitter"},{provider:"google",config:{scope:"https://www.googleapis.com/auth/userinfo.profile"}}].forEach(({provider:e,config:t})=>{const{auth:r,authCb:s}=q.genOauthLogin(e,t);L.get(`/auth/${e}`,r),L.get(`/auth/${e}/callback`,s,h(q.linkAccount)),L.get(`/link/${e}`,T,r)});const A=a.a.Router();A.use("/",L),A.use("/",R),A.get("/",(e,t)=>{t.render("index",{title:"Join"})}),A.post("/chat",(e,t)=>{t.render("chat",{title:"Chat"})}),A.use((e,t,r,s)=>{if(!e.errors)return s(e);const a=Object.keys(e.errors);return a.length>0&&a.forEach(r=>t.flash("error",e.errors[r].message)),r.redirect("back")}),A.use((e,t,r,s)=>{const a=e.status||500;r.status(a).render("error",{status:a,message:e.message})});t.a=A},function(e,t){e.exports=require("connect-ensure-login")},function(e,t){e.exports=require("connect-flash")},function(e,t){e.exports=require("express-session")},function(e,t,r){"use strict";(function(e){var s=r(2),a=r.n(s),o=r(3),n=r.n(o),i=r(9),c=r.n(i),l=r(1),u=r.n(l),d=r(18),m=r.n(d),p=r(17),f=r.n(p);t.a=[a.a.static(n.a.join(e,"../public")),c.a.json(),c.a.urlencoded({extended:!0}),m()({secret:process.env.SESSION_SECRET,resave:!1,saveUninitialized:!1}),u.a.initialize(),u.a.session(),f()()]}).call(this,"/Users/tim/Work/misc/complete-node/node-chat-app/server")},function(e,t){e.exports=require("email-templates")},function(e,t){e.exports=require("passport-google-oauth")},function(e,t){e.exports=require("passport-twitter")},function(e,t){e.exports=require("passport-facebook")},function(e,t){e.exports=require("passport-local")},function(e,t){e.exports=require("mongoose-beautiful-unique-validation")},function(e,t){e.exports=require("validator/lib/isEmail")},function(e,t){e.exports=require("es6-promisify")},function(e,t){e.exports=require("hbs-utils")},function(e,t){e.exports=require("socket.io")},function(e,t){e.exports=require("http")},function(e,t,r){"use strict";var s=r(1),a=r.n(s),o=r(24),n=r.n(o),i=r(23),c=r.n(i),l=r(22),u=r.n(l),d=r(21),m=r(0),p=r.n(m);r(4);const f=p.a.model("User");a.a.use(new n.a({usernameField:"email",passReqToCallback:!0},async(e,t,r,s)=>{try{const e=await f.findOne({"local.email":t});return e&&await e.isValidPassword(r)?e.local.isVerified?s(null,e):s(null,!1,{message:'The email has not been verified for this account. <a href="/resend">Resend email confirmation</a>'}):s(null,!1,{message:"Email or password is invalid"})}catch(e){return s(e,null,{message:"Could not authenticate. Please try again"})}}));const g=e=>e.emails&&e.emails.length&&e.emails[0].value,h=async(e,t,r)=>f.create({[e]:{id:r.id,displayName:r.displayName,token:t,email:g(r)},username:await f.genUniqueUsername(r.username||r.displayName)}),w=e=>async(t,r,s,a,o)=>{try{let s=await f.findOne({[`${e}.id`]:a.id});return t.user?s?(s[e].token||(s=await h(e,r,a)),o(null,s)):o(null,s=await h(e,r,a)):s?(s[e].token||(s[e]={id:a.id,displayName:a.displayName,token:r,email:g(a)},s=await s.save()),o(null,s)):o(null,s=await h(e,r,a),{firstLogin:!0})}catch(e){return o(e,!1,{message:"Could not authenticate. Please try again"})}};a.a.use(new c.a({clientID:process.env.FACEBOOK_APP_ID,clientSecret:process.env.FACEBOOK_APP_SECRET,callbackURL:`${process.env.DOMAIN}/auth/facebook/callback`,profileFields:["email","displayName"],passReqToCallback:!0},w("facebook"))),a.a.use(new u.a({consumerKey:process.env.TWITTER_CONSUMER_KEY,consumerSecret:process.env.TWITTER_CONSUMER_SECRET,callbackURL:`${process.env.DOMAIN}/auth/twitter/callback`,passReqToCallback:!0},w("twitter"))),a.a.use(new d.OAuth2Strategy({clientID:process.env.GOOGLE_APP_ID,clientSecret:process.env.GOOGLE_APP_SECRET,callbackURL:`${process.env.DOMAIN}/auth/google/callback`,passReqToCallback:!0},w("google"))),a.a.serializeUser((e,t)=>t(null,e.id)),a.a.deserializeUser(async(e,t)=>{try{return t(null,await f.findById(e))}catch(e){return t(e)}})},function(e,t){e.exports=require("handlebars")},function(e,t,r){"use strict";r.r(t);var s=r(7);const a=process.env.PORT||4e3;s.a,s.b;s.a.listen(a,()=>{console.log(`Server started on port ${a}`)})},function(e,t,r){e.exports=r(33)}]);
//# sourceMappingURL=server.bundle.js.map