!function(e){var r={};function t(a){if(r[a])return r[a].exports;var s=r[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,t),s.l=!0,s.exports}t.m=e,t.c=r,t.d=function(e,r,a){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var s in e)t.d(a,s,function(r){return e[r]}.bind(null,s));return a},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=26)}([function(e,r){e.exports=require("mongoose")},function(e,r){e.exports=require("passport")},function(e,r){e.exports=require("express")},function(e,r){e.exports=require("lodash")},function(e,r){e.exports=require("path")},function(e,r){e.exports=require("crypto")},function(e,r){e.exports=require("express-validator/check")},function(e,r){e.exports=require("express-session")},function(e,r){e.exports=require("body-parser")},function(e,r){e.exports=require("moment")},function(e,r){e.exports=require("bcrypt")},function(e,r){e.exports=require("request-promise")},function(e,r){e.exports=require("connect-ensure-login")},function(e,r){e.exports=require("connect-flash")},function(e,r){e.exports=require("email-templates")},function(e,r){e.exports=require("passport-google-oauth")},function(e,r){e.exports=require("passport-twitter")},function(e,r){e.exports=require("passport-facebook")},function(e,r){e.exports=require("passport-local")},function(e,r){e.exports=require("mongoose-beautiful-unique-validation")},function(e,r){e.exports=require("validator/lib/isEmail")},function(e,r){e.exports=require("es6-promisify")},function(e,r){e.exports=require("socket.io")},function(e,r){e.exports=require("http")},function(e,r,t){"use strict";t.r(r);var a=t(2),s=t.n(a),o=t(23),n=t.n(o),i=t(22),c=t.n(i),l=t(21),u=t(0),d=t.n(u),m=t(10),p=t.n(m),f=t(20),g=t.n(f),h=t(19),w=t.n(h),y=t(3),v=t.n(y);const b=new d.a.Schema({username:{type:String,required:"Username is required",unique:"Username already taken",sparse:!0,lowercase:!0,trim:!0,match:[/^[\w-]+$/,"Username must contain alphanumeric, '-', '_' characters only"]},local:{email:{type:String,unique:"An account with email {VALUE} already exists",sparse:!0,trim:!0,lowercase:!0,validate:[g.a,"Email is not valid"]},password:{type:String,trim:!0,minlength:5},isVerified:{type:Boolean,default:!1}},facebook:{id:String,token:String,displayName:String,email:String},twitter:{id:String,token:String,displayName:String,username:String},google:{id:String,token:String,displayName:String,email:String},passwordResetToken:String,passwordResetExpires:Date});b.methods.isValidPassword=function(e){return p.a.compare(e,this.local.password)};const E=["twitter","google","facebook","local"];b.methods.accountsTotal=function(){return Object.keys(this.toObject()).reduce((e,r)=>E.includes(r)&&("local"===r||"local"!==r&&this[r].token)?e+1:e,0)},b.statics.hashPassword=function(e){if(!e)throw new Error("Password cannot be blank");return p.a.hash(e,12)},b.statics.genUniqueUsername=async function(e="anon"){const r=e.toLowerCase().replace(/ /g,"_"),t=new RegExp(`^${r}d*$`),a=await this.find({username:t},"username");let s=r;for(let e=0;v.a.find(a,{username:s});e+=1)s=r+(a.length+e);return s},b.plugin(w.a);d.a.model("User",b);var k=t(5),O=t.n(k);const R=new d.a.Schema({user:{type:d.a.Schema.Types.ObjectId,ref:"User",required:!0},createdAt:{type:Date,expires:"5 min",default:Date.now},token:{type:String,required:!0}}),_=()=>O.a.randomBytes(20).toString("hex");R.statics.findOneOrCreate=async function(e){const r=this;if(e){return await r.findOne({user:e})||r.create({user:e,token:_()})}return new Error("User id not given")},R.statics.createToken=async function(e){return this.create({user:e,token:_()})};d.a.model("EmailVerifyToken",R);var S=async()=>d.a.connect(process.env.MONGODB_URI),P=t(1),T=t.n(P),U=t(18),x=t.n(U),A=t(17),q=t.n(A),C=t(16),L=t.n(C),j=t(15);const I=d.a.model("User");T.a.use(new x.a({usernameField:"email",passReqToCallback:!0},async(e,r,t,a)=>{try{const e=await I.findOne({"local.email":r});return e&&await e.isValidPassword(t)?e.local.isVerified?a(null,e):a(null,!1,{message:'The email has not been verified for this account. <a href="/resend">Resend email confirmation</a>'}):a(null,!1,{message:"Email or password is invalid"})}catch(e){return a(e,null,{message:"Could not authenticate. Please try again"})}}));const $=e=>e.emails&&e.emails.length&&e.emails[0].value,M=async(e,r,t)=>I.create({[e]:{id:t.id,displayName:t.displayName,token:r,email:$(t)},username:await I.genUniqueUsername(t.username||t.displayName)}),N=e=>async(r,t,a,s,o)=>{try{let a=await I.findOne({[`${e}.id`]:s.id});return r.user?a?(a[e].token||(a=await M(e,t,s)),o(null,a)):o(null,a=await M(e,t,s)):a?(a[e].token||(a[e]={id:s.id,displayName:s.displayName,token:t,email:$(s)},a=await a.save()),o(null,a)):o(null,a=await M(e,t,s),{firstLogin:!0})}catch(e){return o(e,!1,{message:"Could not authenticate. Please try again"})}};T.a.use(new q.a({clientID:process.env.FACEBOOK_APP_ID,clientSecret:process.env.FACEBOOK_APP_SECRET,callbackURL:`${process.env.DOMAIN}/auth/facebook/callback`,profileFields:["email","displayName"],passReqToCallback:!0},N("facebook"))),T.a.use(new L.a({consumerKey:process.env.TWITTER_CONSUMER_KEY,consumerSecret:process.env.TWITTER_CONSUMER_SECRET,callbackURL:`${process.env.DOMAIN}/auth/twitter/callback`,passReqToCallback:!0},N("twitter"))),T.a.use(new j.OAuth2Strategy({clientID:process.env.GOOGLE_APP_ID,clientSecret:process.env.GOOGLE_APP_SECRET,callbackURL:`${process.env.DOMAIN}/auth/google/callback`,passReqToCallback:!0},N("google"))),T.a.serializeUser((e,r)=>r(null,e.id)),T.a.deserializeUser(async(e,r)=>{try{return r(null,await I.findById(e))}catch(e){return r(e)}});var F=t(14),D=t.n(F),K=t(4),G=t.n(K);var H=new D.a({message:{from:"no-reply@timiscoding.me"},transport:{port:process.env.MAILER_PORT,host:process.env.MAILER_HOST,auth:{user:process.env.MAILER_USERNAME,pass:process.env.MAILER_PASSWORD}},juice:!0,juiceResources:{webResources:{relativeTo:G.a.join(__dirname,"../../views/emails/build")}},views:{root:G.a.join(__dirname,"../../views/emails")}});var Y=e=>"string"==typeof e&&e.trim().length>0,B=t(9),V=t.n(B);const z=(e,r)=>({from:e,text:r,createdAt:V()().valueOf()});var W=(()=>{let e;const r=()=>new class{constructor(){this.users=[]}addUser(e,r,t,a){const s={id:e,name:r,room:t,mongoId:a};return this.users.push(s),s}removeUser(e){const r=Object.assign({},this.getUser({id:e}));return r&&(this.users=this.users.filter(e=>e.id!==r.id)),r}getUser({id:e,name:r}){return this.users.find(t=>t.id===e||t.name===r)}getUserList(e){return this.users.filter(r=>r.room===e).map(e=>e.name)}getRoomList(){return[...new Set(this.users.map(e=>e.room))]}};return{getInstance:()=>(e||(e=r()),e)}})();const J=new d.a.Schema({name:{type:String,required:!0,minLength:1,trim:!0}});var Q=d.a.model("Room",J);const X=new d.a.Schema({createdAt:{type:Date,default:Date.now},to:{type:String,index:!0,required:!0},from:{type:d.a.Schema.Types.ObjectId,ref:"User",required:!0},content:{type:String,trim:!0,minLength:1,required:!0}});var Z=d.a.model("Message",X);const ee=W.getInstance(),re=d.a.model("User"),te=e=>{e.emit("updateRoomList",{rooms:ee.getRoomList()})},ae=(e,r)=>e.on("createLocationMessage",t=>{const a=ee.getUser({id:e.id});a&&r.to(a.room).emit("newLocationMessage",((e,r,t)=>({from:e,url:`https://www.google.com/maps?q=${r},${t}`,createdAt:V()().valueOf()}))(a.name,t.latitude,t.longitude))});var se=(e,r)=>({joinRoom:((e,r)=>e.on("join",async(t,a)=>{if(!Y(t.room))return a("Room name required!");const s=t.room.trim().toLowerCase();e.join(s);const{passport:o}=e.handshake.session;let n,i,c;if(o&&o.user)try{const e=await re.findById(o.user);n=e.username,i=e.id}catch(e){return a("Could not retrieve user information")}else{const e=new d.a.Types.ObjectId;n=`guest-${e.toString().slice(-4)}`,await re.create({username:n,_id:e}),i=e.toString()}try{await Q.findOne({name:s})||await Q.create({name:s})}catch(e){return a("Could not create room")}try{c=await Z.find({to:s},{_id:0},{sort:{createdAt:1}}).populate("from",{username:1,_id:0})}catch(e){return a("Could not get message history")}return ee.removeUser(e.id),ee.addUser(e.id,n,s,i),r.to(s).emit("updateUserList",ee.getUserList(s)),e.broadcast.to(s).emit("newMessage",z("Admin",`${n} joined the chat`)),te(r),a(null,c)}))(e,r),createMessage:((e,r)=>e.on("createMessage",async(t,a)=>{const s=ee.getUser({id:e.id});if(s&&Y(t.text)){try{await Z.create({from:s.mongoId,to:s.room,content:t.text})}catch(e){return a("Error persisting message to db")}r.to(s.room).emit("newMessage",z(s.name,t.text))}a()}))(e,r),createLocationMessage:ae(e,r),disconnect:((e,r)=>e.on("disconnect",()=>{const t=ee.removeUser(e.id);r.to(t.room).emit("updateUserList",ee.getUserList(t.room)),r.to(t.room).emit("newMessage",z("Admin",`${t.name} has left`)),te(r)}))(e,r),getRoomList:(e=>e.on("getRoomList",(e,r)=>{r({rooms:ee.getRoomList()})}))(e)}),oe=t(8),ne=t.n(oe),ie=t(7),ce=t.n(ie),le=t(13),ue=t.n(le);const de={secret:process.env.SESSION_SECRET,resave:!1,saveUninitialized:!1};{const e=t(25)(ce.a);de.store=new e({mongooseConnection:d.a.connection,autoRemove:"native"})}const me=ce()(de);var pe=[s.a.static(G.a.join(__dirname,"../../public")),ne.a.json(),ne.a.urlencoded({extended:!0}),me,T.a.initialize(),T.a.session(),ue()()],fe=t(12),ge=t(11),he=t.n(ge),we=t(6);const ye={username:{in:"body",isLength:{errorMessage:"Username must not be empty",options:{min:1}},custom:{options:e=>{if(!/^[\w-]+$/.test(e))throw new Error("Username must be letters, numbers, '_', ' -' only");if(/^guest-\w+$/i.test(e))throw new Error("Usernames beginning with 'guest-' are reserved for unregistered users");return!0}},trim:!0},email:{in:"body",isEmail:{errorMessage:"Email address is not valid"},trim:!0,normalizeEmail:{options:{all_lowercase:!0,gmail_convert_googlemaildotcom:!0,gmail_remove_dots:!0,gmail_remove_subaddress:!0}}},password:{in:"body",isLength:{errorMessage:"Password must be at least 5 characters long",options:{min:5}},trim:!0},"password-confirm":{in:"body",custom:{options:(e,{req:r})=>{if(r.body.password!==e)throw new Error("Password confirmation does not match password field");return!0}}}},ve=(...e)=>e.length?v.a.pick(ye,e):ye,be=(e,r,t)=>[t?Object(we.checkSchema)(e).map(e=>e.optional()):Object(we.checkSchema)(e),(e,t,a)=>{const s=Object(we.validationResult)(e).formatWith(({msg:e})=>e);return s.isEmpty()?a():(e.flash("error",s.array({onlyFirstError:!0})),r?t.render(r,{body:e.body,flashes:e.flash(),recaptchaKey:process.env.G_RECAPTCHA_SITE_KEY}):t.redirect("back"))}],Ee=e=>(r,t,a)=>e(r,t,a).catch(a),ke=d.a.model("User"),Oe=d.a.model("EmailVerifyToken"),Re=be(ve(),"signup"),_e=be(ve("email"),"confirmEmail"),Se=be(ve("password","password-confirm"),"resetPassword");var Pe={createOne:Ee(async(e,r,t)=>{const{email:a,password:s,username:o}=e.body;try{const n=await ke.create({local:{email:a,password:await ke.hashPassword(s)},username:o});e.emailToken=await Oe.createToken(n.id),t()}catch(s){if(s.errors){const t=Object.keys(s.errors).map(e=>s.errors[e].message);e.flash("error",t),r.render("signup",{body:{username:o,email:a},flashes:e.flash(),recaptchaKey:process.env.G_RECAPTCHA_SITE_KEY})}else t(s)}}),getOne:Ee(async(e,r)=>{const t=await ke.findById(e.user.id);r.send(`get user\n ${t}`)}),updateOne:Ee((e,r)=>{r.send(`update user\n ${e.docFromId}`)}),deleteOne:Ee((e,r)=>{r.send(`delete user\n ${e.docFromId}`)}),signupForm:(e,r)=>{r.render("signup",{recaptchaKey:process.env.G_RECAPTCHA_SITE_KEY})},validateNewUser:Re,confirmEmail:Ee(async(e,r)=>{const t=await Oe.findOneAndRemove({token:e.params.token}).populate("user");if(!t)return e.flash("error",'Email verification invalid. Either the link does not match the one provided\n      in the email or the link may have expired. <a href="/resend">Resend email confirmation</a>'),r.redirect("/");const{user:a}=t;return a.local.isVerified=!0,await a.save(),await e.login(a),e.flash("success","Your email has been confirmed. You are now logged in"),r.redirect("/")}),requestResend:(e,r)=>{r.render("confirmEmail",{recaptchaKey:process.env.G_RECAPTCHA_SITE_KEY})},validateEmail:_e,resend:async(e,r,t)=>{const a=await ke.findOne({"local.email":e.body.email});return a&&a.local?a.local&&a.local.isVerified?(e.flash("info","The email for this account is already confirmed"),r.redirect("/")):(e.emailToken=await Oe.findOneOrCreate(a.id),e.body.username=a.username,t()):(e.flash("info","An account with this email does not exist"),r.render("confirmEmail",{body:e.body,flashes:e.flash()}))},sendConfirmEmail:(e,r)=>{const{email:t,username:a}=e.body;H.send({template:"verifyEmail",message:{to:t},locals:{name:a,confirmURL:`${e.protocol}://${e.hostname}/confirm/${e.emailToken.token}`}}),e.flash("info",`An email has been sent to ${t}. Please confirm your email to complete sign up.`),r.redirect("/")},forgotPasswordForm:(e,r)=>{r.render("forgotPassword",{recaptchaKey:process.env.G_RECAPTCHA_SITE_KEY})},forgotPassword:Ee(async(e,r,t)=>{const a=await ke.findOne({"local.email":e.body.email});return a&&a.local?(a.passwordResetToken=O.a.randomBytes(20).toString("hex"),a.passwordResetExpires=Date.now()+36e5,await a.save(),e.emailToken=a.passwordResetToken,e.body.username=a.username,t()):(e.flash("info","An account with this email does not exist"),r.render("forgotPassword",{body:e.body,flashes:e.flash()}))}),sendResetEmail:(e,r)=>{const{email:t,username:a}=e.body;H.send({template:"resetPassword",message:{to:t},locals:{name:a,resetURL:`${e.protocol}://${e.hostname}/reset/${e.emailToken}`}}),e.flash("info",`An email has been sent to ${t} with instructions to reset your password.`),r.redirect("/")},resetPasswordForm:async(e,r)=>{r.render("resetPassword")},validatePassword:Se,resetPassword:Ee(async(e,r,t)=>{const{user:a}=e;a.local.password=await ke.hashPassword(e.body.password),a.passwordResetExpires=void 0,a.passwordResetToken=void 0,await a.save(),await e.login(a),t()}),validResetToken:Ee(async(e,r,t)=>{const a=await ke.findOne({passwordResetToken:e.params.token,passwordResetExpires:{$gt:Date.now()}});return a?(e.user=a,t()):(e.flash("error","This password reset is invalid or expired. Please request a new one"),r.redirect("/forgot"))}),sendPasswordUpdatedEmail:Ee(async(e,r)=>{const{local:{email:t},username:a}=e.user;H.send({template:"updatedPassword",message:{to:t},locals:{name:a}}),e.flash("success","Password has been updated"),r.redirect("/")}),validateHuman:e=>async(r,t,a)=>{const s={method:"POST",uri:"https://www.google.com/recaptcha/api/siteverify",formData:{secret:process.env.G_RECAPTCHA_SECRET,response:r.body["g-recaptcha-response"]},json:!0};try{if((await he()(s)).success)return a()}catch(e){return a(e)}return r.flash("error","reCaptcha failed. Please try again"),t.render(e,{body:r.body,flashes:r.flash(),recaptchaKey:process.env.G_RECAPTCHA_SITE_KEY})}};const Te=s.a.Router(),Ue=d.a.model("User");Te.param("id",async(e,r,t,a)=>{try{if(!d.a.Types.ObjectId.isValid(a))throw new Error("Invalid user id");const r=await Ue.findById(a);if(!r)throw new Error("No user found");e.docFromId=r,t()}catch(e){t(e.message)}}),Te.route("/signup").get(Pe.signupForm).post(Pe.validateNewUser,Pe.validateHuman("signup"),Pe.createOne,Pe.sendConfirmEmail),Te.route("/user/:id").get(Object(fe.ensureLoggedIn)(),Pe.getOne).put(Pe.updateOne).delete(Pe.deleteOne),Te.route("/resend").get(Pe.requestResend).post(Pe.validateEmail,Pe.validateHuman("confirmEmail"),Pe.resend,Pe.sendConfirmEmail),Te.get("/confirm/:token",Pe.confirmEmail),Te.route("/forgot").get(Pe.forgotPasswordForm).post(Pe.validateEmail,Pe.validateHuman("forgotPassword"),Pe.forgotPassword,Pe.sendResetEmail),Te.route("/reset/:token").get(Pe.validResetToken,Pe.resetPasswordForm).post(Pe.validResetToken,Pe.validatePassword,Pe.resetPassword,Pe.sendPasswordUpdatedEmail);const xe=d.a.model("User"),Ae=T.a.authenticate("local",{successReturnToOrRedirect:"/",failureRedirect:"/login",failureFlash:!0,successFlash:"You have logged in"}),qe=T.a.authorize("local",{failureRedirect:"/link/local",failureFlash:"Email or password is invalid"}),Ce=be(ve("email"),null,!0),Le=be(ve("username"),null,!0);var je={loginForm:(e,r)=>r.render("login"),loginUser:Ae,logoutUser:(e,r)=>{e.logout(),e.flash("info","You have logged out"),r.redirect("/")},genOauthLogin:(e,r={})=>({auth:(t,a,s)=>(t.user?T.a.authorize:T.a.authenticate).call(T.a,e,r.scope&&{scope:r.scope})(t,a,s),authCb(r,t,a){const s=r.user?T.a.authorize:T.a.authenticate,o=r.user?{failureRedirect:"/profile",failureFlash:`${e} account was not linked`}:(s,o,n)=>s?a(s):o?r.login(o,s=>s?a(s):(r.flash("success",`You have logged in, ${o[e].displayName||o[e].username}`),n.firstLogin?t.redirect("/profile"):t.redirect("/"))):(r.flash("error",`Permission to login via ${e} was denied`),t.redirect("/login"));return s.call(T.a,e,o)(r,t,a)}}),profile:(e,r)=>{const{user:t}=e,a=Object.entries(t.toObject()).reduce((e,[r,t])=>(("local"===r&&t.email||t.token)&&(e[r]=t.email||t.displayName),e),{}),s=["local","twitter","google","facebook"].filter(e=>!a[e]);r.render("profile",{body:{username:e.user.username,email:e.user.local.email},linkedAccounts:a,linkable:s})},authLocal:qe,linkAccount:async(e,r,t)=>{const{user:a,account:s}=e;if(a&&s){const t=s.toObject({transform(e,r){const t=Object.assign({},r);return delete t.__v,delete t._id,t}});return t.local&&await xe.deleteOne({"local.email":t.local.email}),Object.assign(a,t,{username:a.username}),await a.save(),await s.remove(),e.flash("success","Accounts have been linked"),r.redirect("/profile")}return t()},unlinkAccount:async(e,r,t)=>{const a=e.params.account,{user:s}=e;if(!["twitter","google","facebook","local"].includes(a)){const e=new Error("Unknown account type");return e.status=400,t(e)}if(1===s.accountsTotal)return e.flash("error","Unable to unlink solo account"),r.redirect("/profile");if("local"===a){const e=Object.assign({},s.local);s.local=void 0,await s.save(),await xe.create({local:e,username:await xe.genUniqueUsername()})}else s[a].token=void 0,await s.save();return e.flash("success","Account has been unlinked"),r.redirect("/profile")},linkLocalForm:(e,r)=>r.render("link_local"),updateProfile:async(e,r)=>{const{username:t,email:a,password:s}=e.body;t!==e.user.username&&(e.user.username=t),e.user.local&&a!==e.user.local.email&&(e.user.local.email=a),s&&(e.user.local.password=await xe.hashPassword(s)),await e.user.save(),e.flash("success","Account updated"),r.redirect("/profile")},preValidateProfile:(e,r,t)=>e.body.password?t("route"):t(),validateEmail:Ce,validatePassword:be(ve("password","password-confirm"),null,!0),validateUsername:Le};const Ie=(e,r,t)=>{e.isAuthenticated()?t():r.redirect("/")},$e=s.a.Router();$e.get("/login",je.loginForm),$e.post("/login",je.loginUser),$e.get("/logout",Ie,je.logoutUser),$e.get("/profile",Ie,je.profile),$e.post("/profile",[Ie,je.validateUsername,je.validateEmail,je.validatePassword,Ee(je.updateProfile)]),$e.get("/link/local",Ie,je.linkLocalForm),$e.post("/link/local",Ie,je.authLocal,Ee(je.linkAccount)),$e.post("/unlink/:account",Ie,Ee(je.unlinkAccount)),[{provider:"facebook",config:{scope:"email"}},{provider:"twitter"},{provider:"google",config:{scope:"https://www.googleapis.com/auth/userinfo.profile"}}].forEach(({provider:e,config:r})=>{const{auth:t,authCb:a}=je.genOauthLogin(e,r);$e.get(`/auth/${e}`,t),$e.get(`/auth/${e}/callback`,a,Ee(je.linkAccount)),$e.get(`/link/${e}`,Ie,t)});const Me=s.a.Router();Me.use("/",$e),Me.use("/",Te),Me.get("/",(e,r)=>{r.render("index",{title:"Join"})}),Me.post("/chat",(e,r)=>{r.render("chat",{title:"Chat",room:e.body.room})}),Me.use((e,r,t,a)=>{if(!e.errors)return a(e);const s=Object.keys(e.errors);return s.length>0&&s.forEach(t=>r.flash("error",e.errors[t].message)),t.redirect("back")}),Me.use((e,r,t,a)=>{const s=e.status||500;t.status(s).render("error",{status:s,message:e.message})});var Ne=Me;const Fe=s()(),De=n.a.createServer(Fe),Ke=c()(De);S().catch(e=>console.error("Could not connect to DB",e.message)),Fe.set("view engine","pug"),Fe.set("trust proxy",!0),Fe.use(pe),Ke.use((e,r)=>{me(e.handshake,{},r)}),Ke.on("connection",e=>{console.log("New user connected"),se(e,Ke)}),Fe.use((e,r,t)=>{e.login=Object(l.promisify)(e.login.bind(e)),t()}),Fe.use((e,r,t)=>{const a=e.flash();r.locals.user=e.user,r.locals.flashes=Object.keys(a).length>0?a:void 0,t()}),Fe.use("/",Ne);const Ge=process.env.PORT||4e3;De.listen(Ge,()=>{console.log(`Server started on port ${Ge}`)})},function(e,r){e.exports=require("connect-mongo")},function(e,r,t){e.exports=t(24)}]);
//# sourceMappingURL=server.bundle.js.map