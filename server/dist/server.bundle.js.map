{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"passport\"","webpack:///external \"mongoose\"","webpack:///external \"express\"","webpack:///external \"path\"","webpack:///external \"hbs\"","webpack:///./server/server.js","webpack:///external \"express-validator/check\"","webpack:///external \"body-parser\"","webpack:///external \"moment\"","webpack:///external \"bcrypt\"","webpack:///./server/models/user.model.js","webpack:///./server/db.js","webpack:///./server/utils/validation.js","webpack:///./server/utils/message.js","webpack:///./server/socketEvent.js","webpack:///./server/utils/users.js","webpack:///./server/utils/helpers.js","webpack:///./server/controllers/user.controller.js","webpack:///./server/routes/user.router.js","webpack:///./server/controllers/auth.controller.js","webpack:///./server/routes/auth.router.js","webpack:///./server/routes/index.js","webpack:///external \"connect-ensure-login\"","webpack:///external \"connect-flash\"","webpack:///external \"express-session\"","webpack:///./server/middleware.js","webpack:///external \"lodash\"","webpack:///external \"passport-twitter\"","webpack:///external \"passport-facebook\"","webpack:///external \"passport-local\"","webpack:///external \"mongoose-beautiful-unique-validation\"","webpack:///external \"validator/lib/isEmail\"","webpack:///external \"hbs-utils\"","webpack:///external \"socket.io\"","webpack:///external \"http\"","webpack:///./server/passport.js","webpack:///./server/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_routes__WEBPACK_IMPORTED_MODULE_10__","app","express__WEBPACK_IMPORTED_MODULE_0___default","server","http__WEBPACK_IMPORTED_MODULE_1___default","a","createServer","io","socket_io__WEBPACK_IMPORTED_MODULE_2___default","_db__WEBPACK_IMPORTED_MODULE_6__","catch","err","console","error","message","hbs__WEBPACK_IMPORTED_MODULE_3___default","localsAsTemplateData","registerHelper","obj","JSON","stringify","hbsUtils","hbs_utils__WEBPACK_IMPORTED_MODULE_4___default","registerPartials","hbsRegisterPartials","path__WEBPACK_IMPORTED_MODULE_5___default","join","__dirname","set","use","_middleware__WEBPACK_IMPORTED_MODULE_9__","on","socket","log","_socketEvent__WEBPACK_IMPORTED_MODULE_8__","req","res","next","flashes","flash","locals","user","keys","length","undefined","userSchema","external_mongoose_default","Schema","email","type","String","unique","sparse","trim","lowercase","validate","isEmail_default","password","minlength","username","required","match","facebookId","twitterId","methods","[object Object]","plaintextPassword","Error","external_bcrypt_default","hash","compare","this","pre","async","hashPassword","plugin","external_mongoose_beautiful_unique_validation_default","model","__webpack_exports__","connect","process","env","DB_URL","validation","string","generateMessage","from","text","createdAt","external_moment_default","valueOf","socketEvent_users","instance","createInstance","users","id","room","push","userToRemove","assign","getUser","filter","find","map","Set","getInstance","updateUserJoining","emit","rooms","getRoomList","createLocationMessage","coords","to","latitude","longitude","url","generateLocationMessage","joinRoom","params","callback","toLowerCase","removeUser","addUser","getUserList","broadcast","createMessage","disconnect","_","catchAsyncError","fn","User","validateNewUser","check_","in","isLength","errorMessage","options","min","matches","isEmail","normalizeEmail","all_lowercase","gmail_convert_googlemaildotcom","gmail_remove_dots","gmail_remove_subaddress","password-confirm","custom","body","errors","formatWith","msg","isEmpty","array","onlyFirstError","render","user_controller","createOne","save","login","redirect","getOne","findById","send","updateOne","docFromId","deleteOne","signupForm","userRouter","external_express_default","Router","user_router_User","param","Types","ObjectId","isValid","route","post","external_connect_ensure_login_","put","delete","auth_controller","loginForm","loginUser","external_passport_default","authenticate","successReturnToOrRedirect","failureRedirect","failureFlash","successFlash","logoutUser","logout","genOauthLogin","provider","requestPermission","toUpperCase","substring","authRouter","forEach","routes","title","validationErrors","e","status","static","path__WEBPACK_IMPORTED_MODULE_1___default","body_parser__WEBPACK_IMPORTED_MODULE_2___default","json","urlencoded","extended","express_session__WEBPACK_IMPORTED_MODULE_4___default","secret","SESSION_SECRET","resave","saveUninitialized","passport__WEBPACK_IMPORTED_MODULE_3___default","initialize","session","connect_flash__WEBPACK_IMPORTED_MODULE_5___default","mongoose__WEBPACK_IMPORTED_MODULE_4___default","passport__WEBPACK_IMPORTED_MODULE_0___default","passport_local__WEBPACK_IMPORTED_MODULE_1___default","usernameField","done","findOne","isValidPassword","genUniqueUsername","snakeCase","replace","usernameRegex","RegExp","usernames","newUsername","lodash__WEBPACK_IMPORTED_MODULE_5___default","passport_facebook__WEBPACK_IMPORTED_MODULE_2___default","clientID","FACEBOOK_APP_ID","clientSecret","FACEBOOK_APP_SECRET","callbackURL","DOMAIN","accessToken","refreshToken","profile","displayName","passport_twitter__WEBPACK_IMPORTED_MODULE_3___default","consumerKey","TWITTER_CONSUMER_KEY","consumerSecret","TWITTER_CONSUMER_SECRET","token","tokenSecret","serializeUser","deserializeUser","_server__WEBPACK_IMPORTED_MODULE_0__","port","PORT","listen"],"mappings":"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","file":"server.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","module.exports = require(\"passport\");","module.exports = require(\"mongoose\");","module.exports = require(\"express\");","module.exports = require(\"path\");","module.exports = require(\"hbs\");","/* eslint-disable no-console */\n\nimport express from 'express';\nimport http from 'http';\nimport socketIO from 'socket.io';\nimport hbs from 'hbs';\nimport hbsUtilities from 'hbs-utils';\nimport path from 'path';\n\nimport connect from './db';\nimport './passport';\nimport genSocketEvents from './socketEvent';\nimport globalMiddleware from './middleware';\nimport routes from './routes';\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = socketIO(server);\nconnect().catch(err => console.error('Could not connect to DB', err.message));\n\nhbs.localsAsTemplateData(app);\nhbs.registerHelper('toJSON', obj => JSON.stringify(obj, null, 2));\nconst hbsUtils = hbsUtilities(hbs);\nlet hbsRegisterPartials = hbsUtils.registerPartials.bind(hbsUtils);\nlet hbsRegisterPartialsOpt = {};\nif (process.env.NODE_ENV === 'development') {\n  hbsRegisterPartials = hbsUtils.registerWatchedPartials.bind(hbsUtils);\n  hbsRegisterPartialsOpt = {\n    onchange(template) { console.log(`hbs partial [${template}] added/changed`); },\n  };\n}\nhbsRegisterPartials(path.join(__dirname, '../views/partials'), hbsRegisterPartialsOpt);\napp.set('view engine', 'hbs');\n\napp.use(globalMiddleware);\n\nio.on('connection', (socket) => {\n  console.log('New user connected');\n  genSocketEvents(socket, io);\n});\n\n// pass variables to all templates\napp.use((req, res, next) => {\n  const flashes = req.flash();\n  res.locals.user = req.user;\n  res.locals.flashes = Object.keys(flashes).length > 0 ? flashes : undefined;\n  next();\n});\napp.use('/', routes);\n\nexport { server as default, io };\n","module.exports = require(\"express-validator/check\");","module.exports = require(\"body-parser\");","module.exports = require(\"moment\");","module.exports = require(\"bcrypt\");","import mongoose from 'mongoose';\nimport bcrypt from 'bcrypt';\nimport isEmail from 'validator/lib/isEmail';\nimport beautifyUnique from 'mongoose-beautiful-unique-validation';\n\nconst userSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    unique: 'An account with email {VALUE} already exists',\n    sparse: true, // allows us to add documents without unique fields\n    trim: true,\n    lowercase: true,\n    validate: [isEmail, 'Email is not valid'],\n  },\n  password: {\n    type: String,\n    trim: true,\n    minlength: 5,\n  },\n  username: {\n    type: String,\n    required: 'Username is required',\n    unique: 'Username already taken',\n    sparse: true,\n    lowercase: true,\n    trim: true,\n    match: [/^[\\w-]+$/, \"Username must contain alphanumeric, '-', '_' characters only\"],\n  },\n  facebookId: {\n    type: String,\n    unique: 'An account with this Facebook already exists',\n    sparse: true,\n  },\n  twitterId: {\n    type: String,\n    unique: 'An account with this Twitter already exists',\n    sparse: true,\n  },\n});\n\nuserSchema.methods = {\n  hashPassword(plaintextPassword) {\n    if (!plaintextPassword) {\n      throw new Error('Password cannot be blank');\n    }\n    return bcrypt.hash(plaintextPassword, 12);\n  },\n  isValidPassword(password) {\n    return bcrypt.compare(password, this.password);\n  },\n};\n\nuserSchema.pre('save', async function preSaveUser(next) {\n  if (this.password) { // password might not be supplied if logging in via oauth\n    this.password = await this.hashPassword(this.password);\n  }\n  next();\n});\n\n// if client tries creating a duplicate on a unique field, it will produce a low level\n// mongo db error. This plugin transforms that error into a mongoose validation error\n// that exists in an 'errors' object\nuserSchema.plugin(beautifyUnique);\n\nexport default mongoose.model('User', userSchema);\n","import mongoose from 'mongoose';\nimport './models';\n\nconst connect = async () => mongoose.connect(process.env.DB_URL);\n\nexport default connect;\n\n","const isRealString = string => typeof string === 'string' && string.trim().length > 0;\n\nexport default isRealString;\n","import moment from 'moment';\n\nexport const generateMessage = (from, text) => ({\n  from,\n  text,\n  createdAt: moment().valueOf(),\n});\n\nexport const generateLocationMessage = (from, latitude, longitude) => ({\n  from,\n  url: `https://www.google.com/maps?q=${latitude},${longitude}`,\n  createdAt: moment().valueOf(),\n});\n","import isRealString from './utils/validation';\nimport { generateMessage, generateLocationMessage } from './utils/message';\nimport Users from './utils/users';\n\nconst users = Users.getInstance();\n\n// update room list for people joining a room\nconst updateUserJoining = (io) => {\n  io.emit('updateRoomList', { rooms: users.getRoomList() });\n};\n\nconst joinRoom = (socket, io) => socket.on('join', (params, callback) => {\n  if (!isRealString(params.name) || !isRealString(params.room)) {\n    return callback('Name and Room name are required!');\n  }\n\n  const name = params.name.trim();\n  const room = params.room.trim().toLowerCase();\n  const user = users.getUser({ name });\n\n  if (user && user.room === room) {\n    return callback('Username taken!');\n  }\n\n  socket.join(room);\n  users.removeUser(socket.id);\n  users.addUser(socket.id, name, room);\n  io.to(room).emit('updateUserList', users.getUserList(room));\n  socket.emit('newMessage', generateMessage('Admin', `Welcome to the room ${room}!`));\n  socket.broadcast.to(room).emit('newMessage', generateMessage('Admin', `${name} joined the chat`));\n\n  updateUserJoining(io);\n  return callback();\n});\n\nconst createMessage = (socket, io) => socket.on('createMessage', (message, callback) => {\n  const user = users.getUser({ id: socket.id });\n\n  if (user && isRealString(message.text)) {\n    io.to(user.room).emit('newMessage', generateMessage(user.name, message.text));\n  }\n  callback();\n});\n\nconst createLocationMessage = (socket, io) => socket.on('createLocationMessage', (coords) => {\n  const user = users.getUser({ id: socket.id });\n\n  if (user) {\n    io.to(user.room).emit('newLocationMessage', generateLocationMessage(user.name, coords.latitude, coords.longitude));\n  }\n});\n\nconst disconnect = (socket, io) => socket.on('disconnect', () => {\n  const user = users.removeUser(socket.id);\n\n  io.to(user.room).emit('updateUserList', users.getUserList(user.room));\n  io.to(user.room).emit('newMessage', generateMessage('Admin', `${user.name} has left`));\n  updateUserJoining(io);\n});\n\nconst getRoomList = socket => socket.on('getRoomList', (_, callback) => {\n  callback({ rooms: users.getRoomList() });\n});\n\nexport default (socket, io) => ({\n  joinRoom: joinRoom(socket, io),\n  createMessage: createMessage(socket, io),\n  createLocationMessage: createLocationMessage(socket, io),\n  disconnect: disconnect(socket, io),\n  getRoomList: getRoomList(socket, io),\n});\n","class UsersClass {\n  constructor() {\n    this.users = [];\n  }\n\n  addUser(id, name, room) {\n    const user = { id, name, room };\n    this.users.push(user);\n    return user;\n  }\n\n  removeUser(id) {\n    const userToRemove = Object.assign({}, this.getUser({ id }));\n\n    if (userToRemove) {\n      this.users = this.users.filter(user => user.id !== userToRemove.id);\n    }\n\n    return userToRemove;\n  }\n\n  getUser({ id, name }) {\n    return this.users.find(user => user.id === id || user.name === name);\n  }\n\n  getUserList(room) {\n    const users = this.users.filter(user => user.room === room);\n    const namesArray = users.map(user => user.name);\n\n    return namesArray;\n  }\n\n  getRoomList() {\n    const rooms = new Set(this.users.map(user => user.room));\n    return [...rooms];\n  }\n}\n\nconst Users = (() => {\n  let instance;\n\n  const createInstance = () => new UsersClass();\n\n  return {\n    getInstance() {\n      if (!instance) {\n        instance = createInstance();\n      }\n      return instance;\n    },\n  };\n})();\n\nexport default Users;\nexport { UsersClass };\n","export const catchAsyncError = fn => (req, res, next) => fn(req, res, next).catch(next);\n","import mongoose from 'mongoose';\nimport { checkSchema, validationResult } from 'express-validator/check';\n\nimport { catchAsyncError } from '../utils/helpers';\n\nconst User = mongoose.model('User');\n\nconst signupForm = (req, res) => {\n  res.render('signup');\n};\n\nconst validateNewUser = [\n  checkSchema({\n    username: {\n      in: 'body',\n      isLength: {\n        errorMessage: 'Username must not be empty',\n        options: { min: 1 },\n      },\n      matches: {\n        errorMessage: \"Username must be letters, numbers, '_', '-' only\",\n        options: /^[\\w-]+$/,\n      },\n      trim: true,\n    },\n    email: {\n      in: 'body',\n      isEmail: {\n        errorMessage: 'Email address is not valid',\n      },\n      trim: true,\n      normalizeEmail: {\n        options: {\n          all_lowercase: true,\n          gmail_convert_googlemaildotcom: true,\n          gmail_remove_dots: true,\n          gmail_remove_subaddress: true,\n        },\n      },\n    },\n    password: {\n      in: 'body',\n      isLength: {\n        errorMessage: 'Password must be at least 5 characters long',\n        options: { min: 5 },\n      },\n      trim: true,\n    },\n    'password-confirm': {\n      in: 'body',\n      custom: {\n        options: (value, { req }) => {\n          if (req.body.password !== value) {\n            throw new Error('Password confirmation does not match password field');\n          }\n          return true;\n        },\n      },\n    },\n  }),\n  (req, res, next) => {\n    const errors = validationResult(req).formatWith(({ msg }) => msg);\n    if (errors.isEmpty()) {\n      next();\n    } else {\n      req.flash('error', errors.array({ onlyFirstError: true }));\n      res.render('signup', { body: req.body, flashes: req.flash() });\n    }\n  }];\n\nconst createOne = async (req, res, next) => {\n  const { email, password, username } = req.body;\n  const user = new User({ email, password, username });\n  try {\n    await user.save();\n    req.login(user, next);\n    req.flash('success', 'New account created!');\n    res.redirect('/');\n  } catch (err) {\n    if (err.errors) {\n      const keys = Object.keys(err.errors);\n      const flashes = keys.map(key => err.errors[key].message);\n      req.flash('error', flashes);\n      res.render('signup', { body: { username, email }, flashes: req.flash() });\n    } else {\n      next(err);\n    }\n  }\n};\n\nconst getOne = async (req, res) => {\n  const user = await User.findById(req.user.id);\n  res.send(`get user\\n ${user}`);\n};\n\nconst updateOne = (req, res) => {\n  res.send(`update user\\n ${req.docFromId}`);\n};\n\nconst deleteOne = (req, res) => {\n  res.send(`delete user\\n ${req.docFromId}`);\n};\n\nexport default {\n  createOne,\n  getOne: catchAsyncError(getOne),\n  updateOne: catchAsyncError(updateOne),\n  deleteOne: catchAsyncError(deleteOne),\n  signupForm,\n  validateNewUser,\n};\n","import express from 'express';\nimport { ensureLoggedIn } from 'connect-ensure-login';\nimport mongoose from 'mongoose';\nimport userController from '../controllers/user.controller';\n\nexport const userRouter = express.Router();\nconst User = mongoose.model('User');\n\nuserRouter.param('id', async (req, res, next, id) => {\n  try {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new Error('Invalid user id');\n    }\n    const user = await User.findById(id);\n    if (!user) {\n      throw new Error('No user found');\n    } else {\n      req.docFromId = user;\n      next();\n    }\n  } catch (err) {\n    next(err.message);\n  }\n});\n\nuserRouter.route('/signup')\n  .get(userController.signupForm)\n  .post(userController.validateNewUser, userController.createOne);\n\nuserRouter.route('/user/:id')\n  .get(ensureLoggedIn(), userController.getOne)\n  .put(userController.updateOne)\n  .delete(userController.deleteOne);\n","import passport from 'passport';\n\nconst loginForm = (req, res) => {\n  res.render('login');\n};\n\nconst loginUser = passport.authenticate('local', {\n  successReturnToOrRedirect: '/',\n  failureRedirect: '/login',\n  failureFlash: true,\n  successFlash: true,\n});\n\nconst logoutUser = (req, res) => {\n  req.logout();\n  req.flash('info', 'You have logged out');\n  res.redirect('/');\n};\n\nconst genOauthLogin = provider => ({\n  requestPermission: passport.authenticate(provider),\n  callback: passport.authenticate(provider, {\n    successReturnToOrRedirect: '/',\n    failureRedirect: '/login',\n    failureFlash: `Permission to login with ${provider[0].toUpperCase() + provider.substring(1).toLowerCase()} was denied`,\n    successFlash: true,\n  }),\n});\n\nexport default {\n  loginForm, loginUser, logoutUser, genOauthLogin,\n};\n","import express from 'express';\n\nimport authController from '../controllers/auth.controller';\n\nexport const authRouter = express.Router();\n\nauthRouter.get('/login', authController.loginForm);\nauthRouter.post('/login', authController.loginUser);\nauthRouter.get('/logout', authController.logoutUser);\n\n((providers) => {\n  providers.forEach((provider) => {\n    const { requestPermission, callback } = authController.genOauthLogin(provider);\n    authRouter.get(`/login/${provider}`, requestPermission);\n    authRouter.get(`/login/${provider}/callback`, callback);\n  });\n})(['facebook', 'twitter']);\n","import express from 'express';\nimport { userRouter } from './user.router';\nimport { authRouter } from './auth.router';\n\nconst routes = express.Router();\n\nroutes.use('/', authRouter);\nroutes.use('/', userRouter);\n\nroutes.get('/', (req, res) => {\n  res.render('index', { title: 'Join' });\n});\n\nroutes.post('/chat', (req, res) => {\n  res.render('chat', { title: 'Chat' });\n});\n\n// handle mongoose validation errors\nroutes.use((err, req, res, next) => {\n  if (!err.errors) {\n    return next(err);\n  }\n\n  const validationErrors = Object.keys(err.errors);\n\n  if (validationErrors.length > 0) {\n    validationErrors.forEach(e => req.flash('error', err.errors[e].message));\n  }\n  return res.redirect('back');\n});\n\nroutes.use((err, req, res, next) => { // eslint-disable-line no-unused-vars\n  res.status(500).send(`something messed up: ${err.message}`);\n});\n\nexport default routes;\n","module.exports = require(\"connect-ensure-login\");","module.exports = require(\"connect-flash\");","module.exports = require(\"express-session\");","import express from 'express';\nimport path from 'path';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nimport session from 'express-session';\nimport flash from 'connect-flash';\n\nexport default [\n  express.static(path.join(__dirname, '../public')),\n  bodyParser.json(),\n  bodyParser.urlencoded({ extended: true }),\n  session({ secret: process.env.SESSION_SECRET, resave: false, saveUninitialized: false }),\n  passport.initialize(),\n  passport.session(),\n  flash(),\n];\n","module.exports = require(\"lodash\");","module.exports = require(\"passport-twitter\");","module.exports = require(\"passport-facebook\");","module.exports = require(\"passport-local\");","module.exports = require(\"mongoose-beautiful-unique-validation\");","module.exports = require(\"validator/lib/isEmail\");","module.exports = require(\"hbs-utils\");","module.exports = require(\"socket.io\");","module.exports = require(\"http\");","import passport from 'passport';\nimport LocalStrategy from 'passport-local';\nimport FacebookStrategy from 'passport-facebook';\nimport TwitterStrategy from 'passport-twitter';\nimport mongoose from 'mongoose';\nimport _ from 'lodash';\n\nconst User = mongoose.model('User');\n\npassport.use(new LocalStrategy({ usernameField: 'email' }, async (email, password, done) => {\n  try {\n    const user = await User.findOne({ email });\n    if (!user) {\n      return done(null, false, { message: 'User or password is invalid' });\n    }\n\n    const isValidPassword = await user.isValidPassword(password);\n    if (!isValidPassword) {\n      return done(null, false, { message: 'User or password is invalid' });\n    }\n\n    return done(null, user, { message: `You have logged in, ${user.username}` });\n  } catch (err) {\n    return done(err, null, { message: 'Could not authenticate. Please try again' });\n  }\n}));\n\nconst genUniqueUsername = async (name) => {\n  const snakeCase = name.toLowerCase().replace(/ /g, '_');\n  const usernameRegex = new RegExp(`^${snakeCase}\\d*$`);\n  const usernames = await User.find({ username: usernameRegex }, 'username');\n  let newUsername = snakeCase;\n  // find the first unique username with format username<incrementing number>\n  for (let i = 0; _.find(usernames, { username: newUsername }); i += 1) {\n    newUsername = snakeCase + (usernames.length + i);\n  }\n  return newUsername;\n};\n\npassport.use(new FacebookStrategy(\n  {\n    clientID: process.env.FACEBOOK_APP_ID,\n    clientSecret: process.env.FACEBOOK_APP_SECRET,\n    callbackURL: `${process.env.DOMAIN}/login/facebook/callback`,\n  },\n  (async (accessToken, refreshToken, profile, done) => {\n    try {\n      let user = await User.findOne({ facebookId: profile.id });\n      if (user) {\n        return done(null, user, { message: `You have logged in, ${user.username}` });\n      }\n\n      user = await User.create({\n        facebookId: profile.id,\n        username: await genUniqueUsername(profile.displayName),\n      });\n      return done(null, user, { message: `You have logged in, ${user.username}` });\n    } catch (err) {\n      return done(err, false, { message: 'Could not authenticate. Please try again' });\n    }\n  }),\n));\n\npassport.use(new TwitterStrategy(\n  {\n    consumerKey: process.env.TWITTER_CONSUMER_KEY,\n    consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n    callbackURL: `${process.env.DOMAIN}/login/twitter/callback`,\n  },\n  async (token, tokenSecret, profile, done) => {\n    try {\n      let user = await User.findOne({ twitterId: profile.id });\n\n      if (user) {\n        return done(null, user, { message: `You have logged in, ${user.username}` });\n      }\n\n      user = await User.create({\n        twitterId: profile.id,\n        username: await genUniqueUsername(profile.username),\n      });\n\n      return done(null, user, { message: `You have logged in, ${user.username}` });\n    } catch (err) {\n      return done(err, false, { message: 'Could not authenticate. Please try again' });\n    }\n  },\n));\n\npassport.serializeUser((user, done) => done(null, user.id));\npassport.deserializeUser(async (id, done) => {\n  try {\n    const user = await User.findById(id);\n    return done(null, user);\n  } catch (err) {\n    return done(err);\n  }\n});\n","/* eslint-disable no-console */\n\nimport server, { io } from './server';\n\nconst port = process.env.PORT || 4000;\nlet cServer = server;\nlet cIo = io;\n\nif (module.hot) {\n  module.hot.accept('./server', () => {\n    console.log('Re-attaching event listeners to updated server module');\n    cServer.close();\n    server.listen(port);\n    cServer = server;\n\n    cIo.close();\n    io.attach(cServer);\n    cIo = io;\n  });\n}\n\nserver.listen(port, () => {\n  console.log(`Server started on port ${port}`);\n});\n"],"sourceRoot":""}